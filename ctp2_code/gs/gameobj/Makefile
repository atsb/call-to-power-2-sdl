# Makefile.in generated by automake 1.16.5 from Makefile.am.
# ctp2_code/gs/gameobj/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# $Id: Makefile.am 524 2006-01-16 21:18:46Z ctplinuxfan $
#


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/ctp2
pkgincludedir = $(includedir)/ctp2
pkglibdir = $(libdir)/ctp2
pkglibexecdir = $(libexecdir)/ctp2
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
subdir = ctp2_code/gs/gameobj
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/ctp2_code/libs/anet/macros/libtool.m4 \
	$(top_srcdir)/ctp2_code/libs/anet/macros/ltoptions.m4 \
	$(top_srcdir)/ctp2_code/libs/anet/macros/ltsugar.m4 \
	$(top_srcdir)/ctp2_code/libs/anet/macros/ltversion.m4 \
	$(top_srcdir)/ctp2_code/libs/anet/macros/lt~obsolete.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/ax_subdirs_configure.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/os_defs.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/pathnames.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/win32_directx.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/win32_dxmedia.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/ctp2_code/os/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libgsgameobj_la_LIBADD =
am_libgsgameobj_la_OBJECTS = AchievementTracker.lo Advances.lo \
	advanceutil.lo Agreement.lo AgreementData.lo AgreementPool.lo \
	Army.lo ArmyData.lo armyevent.lo ArmyPool.lo barbarians.lo \
	bldque.lo buildingutil.lo CityData.lo CityEvent.lo \
	CityInfluenceIterator.lo CityRadius.lo Civilisation.lo \
	CivilisationData.lo civilisationpool.lo combatevent.lo \
	CriticalMessagesPrefs.lo CTP2Combat.lo Diffcly.lo \
	Diplomacy_Log.lo DiplomaticRequest.lo DiplomaticRequestData.lo \
	DiplomaticRequestPool.lo Events.lo EventTracker.lo \
	Exclusions.lo FeatTracker.lo gaiacontroller.lo GameObj.lo \
	GameSettings.lo Gold.lo GoodyHuts.lo GSLogs.lo Happy.lo \
	happytracker.lo ID.lo improvementevent.lo installation.lo \
	installationdata.lo installationpool.lo MaterialPool.lo \
	Message.lo messagedata.lo MessagePool.lo ObjPool.lo Order.lo \
	Player.lo PlayerEvent.lo PlayerTurn.lo PlayHap.lo Pollution.lo \
	Readiness.lo Regard.lo Resources.lo Sci.lo Score.lo \
	Strengths.lo TaxRate.lo terrainutil.lo TerrImprove.lo \
	TerrImproveData.lo TerrImprovePool.lo TopTen.lo TradeBids.lo \
	tradeevent.lo TradeOffer.lo TradeOfferData.lo \
	TradeOfferPool.lo TradePool.lo TradeRoute.lo TradeRouteData.lo \
	tradeutil.lo Unit.lo UnitData.lo unitevent.lo UnitPool.lo \
	unitutil.lo Vision.lo WonderTracker.lo wonderutil.lo \
	Wormhole.lo XY_Coordinates.lo
libgsgameobj_la_OBJECTS = $(am_libgsgameobj_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libgsgameobj_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libgsgameobj_la_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/ctp2_code/os/include
depcomp = $(SHELL) $(top_srcdir)/ctp2_code/os/autoconf/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/AchievementTracker.Plo \
	./$(DEPDIR)/Advances.Plo ./$(DEPDIR)/Agreement.Plo \
	./$(DEPDIR)/AgreementData.Plo ./$(DEPDIR)/AgreementPool.Plo \
	./$(DEPDIR)/Army.Plo ./$(DEPDIR)/ArmyData.Plo \
	./$(DEPDIR)/ArmyPool.Plo ./$(DEPDIR)/CTP2Combat.Plo \
	./$(DEPDIR)/CityData.Plo ./$(DEPDIR)/CityEvent.Plo \
	./$(DEPDIR)/CityInfluenceIterator.Plo \
	./$(DEPDIR)/CityRadius.Plo ./$(DEPDIR)/Civilisation.Plo \
	./$(DEPDIR)/CivilisationData.Plo \
	./$(DEPDIR)/CriticalMessagesPrefs.Plo ./$(DEPDIR)/Diffcly.Plo \
	./$(DEPDIR)/Diplomacy_Log.Plo \
	./$(DEPDIR)/DiplomaticRequest.Plo \
	./$(DEPDIR)/DiplomaticRequestData.Plo \
	./$(DEPDIR)/DiplomaticRequestPool.Plo \
	./$(DEPDIR)/EventTracker.Plo ./$(DEPDIR)/Events.Plo \
	./$(DEPDIR)/Exclusions.Plo ./$(DEPDIR)/FeatTracker.Plo \
	./$(DEPDIR)/GSLogs.Plo ./$(DEPDIR)/GameObj.Plo \
	./$(DEPDIR)/GameSettings.Plo ./$(DEPDIR)/Gold.Plo \
	./$(DEPDIR)/GoodyHuts.Plo ./$(DEPDIR)/Happy.Plo \
	./$(DEPDIR)/ID.Plo ./$(DEPDIR)/MaterialPool.Plo \
	./$(DEPDIR)/Message.Plo ./$(DEPDIR)/MessagePool.Plo \
	./$(DEPDIR)/ObjPool.Plo ./$(DEPDIR)/Order.Plo \
	./$(DEPDIR)/PlayHap.Plo ./$(DEPDIR)/Player.Plo \
	./$(DEPDIR)/PlayerEvent.Plo ./$(DEPDIR)/PlayerTurn.Plo \
	./$(DEPDIR)/Pollution.Plo ./$(DEPDIR)/Readiness.Plo \
	./$(DEPDIR)/Regard.Plo ./$(DEPDIR)/Resources.Plo \
	./$(DEPDIR)/Sci.Plo ./$(DEPDIR)/Score.Plo \
	./$(DEPDIR)/Strengths.Plo ./$(DEPDIR)/TaxRate.Plo \
	./$(DEPDIR)/TerrImprove.Plo ./$(DEPDIR)/TerrImproveData.Plo \
	./$(DEPDIR)/TerrImprovePool.Plo ./$(DEPDIR)/TopTen.Plo \
	./$(DEPDIR)/TradeBids.Plo ./$(DEPDIR)/TradeOffer.Plo \
	./$(DEPDIR)/TradeOfferData.Plo ./$(DEPDIR)/TradeOfferPool.Plo \
	./$(DEPDIR)/TradePool.Plo ./$(DEPDIR)/TradeRoute.Plo \
	./$(DEPDIR)/TradeRouteData.Plo ./$(DEPDIR)/Unit.Plo \
	./$(DEPDIR)/UnitData.Plo ./$(DEPDIR)/UnitPool.Plo \
	./$(DEPDIR)/Vision.Plo ./$(DEPDIR)/WonderTracker.Plo \
	./$(DEPDIR)/Wormhole.Plo ./$(DEPDIR)/XY_Coordinates.Plo \
	./$(DEPDIR)/advanceutil.Plo ./$(DEPDIR)/armyevent.Plo \
	./$(DEPDIR)/barbarians.Plo ./$(DEPDIR)/bldque.Plo \
	./$(DEPDIR)/buildingutil.Plo ./$(DEPDIR)/civilisationpool.Plo \
	./$(DEPDIR)/combatevent.Plo ./$(DEPDIR)/gaiacontroller.Plo \
	./$(DEPDIR)/happytracker.Plo ./$(DEPDIR)/improvementevent.Plo \
	./$(DEPDIR)/installation.Plo ./$(DEPDIR)/installationdata.Plo \
	./$(DEPDIR)/installationpool.Plo ./$(DEPDIR)/messagedata.Plo \
	./$(DEPDIR)/terrainutil.Plo ./$(DEPDIR)/tradeevent.Plo \
	./$(DEPDIR)/tradeutil.Plo ./$(DEPDIR)/unitevent.Plo \
	./$(DEPDIR)/unitutil.Plo ./$(DEPDIR)/wonderutil.Plo
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libgsgameobj_la_SOURCES)
DIST_SOURCES = $(libgsgameobj_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/ctp2_code/os/autoconf/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/os/autoconf/config/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} '/home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/os/autoconf/config/missing' autoconf
AUTOHEADER = ${SHELL} '/home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/os/autoconf/config/missing' autoheader
AUTOMAKE = ${SHELL} '/home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/os/autoconf/config/missing' automake-1.16
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -Wno-unused-variable -fpermissive -fms-extensions -fmessage-length=0 -g 
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CTP2_ENABLE_SLICDEBUG = 
CTP2_NOWIN32_INC = -I$(ctp2_code)/os/nowin32
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall -Wno-unused-variable -fpermissive -fms-extensions -fmessage-length=0 -frtti -fexceptions -g 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIRECTX_INCLUDES = 
DIRECTX_LDADD = 
DIRECTX_SDKDIR = 
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
DXMEDIA_INCLUDES = 
DXMEDIA_LDADD = 
DXMEDIA_SDKDIR = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
FGREP = /usr/bin/grep -F
FILECMD = @FILECMD@
GREP = /usr/bin/grep
HAVE_CXX11 = 1
HTLATEX = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LEXLIB = -ll 
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINDEX = 
MAKEINFO = ${SHELL} '/home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/os/autoconf/config/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = ctp2
PACKAGE_BUGREPORT = 
PACKAGE_NAME = ctp2
PACKAGE_STRING = ctp2 1.2
PACKAGE_TARNAME = ctp2
PACKAGE_URL = 
PACKAGE_VERSION = 1.2
PATH_SEPARATOR = :
PDFLATEX = 
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SDL2_CONFIG = pkg-config sdl2
SDL2_FRAMEWORK = 
SDL_CFLAGS = -D_REENTRANT -I/usr/include/SDL2
SDL_LIBS = -lSDL2
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
THUMBPDF = 
UNZIP = /usr/bin/unzip
VERSION = 1.2
VIEWPDF = 
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
YACC = /usr/bin/byacc
YFLAGS = -d -v
_BFR_ = 
abs_builddir = /home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/gs/gameobj
abs_srcdir = /home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/gs/gameobj
abs_top_builddir = /home/wq108/Downloads/ctp2-mainfff/ctp2-main
abs_top_srcdir = /home/wq108/Downloads/ctp2-mainfff/ctp2-main
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
ctp2_code = $(top_srcdir)/ctp2_code
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/os/autoconf/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/wq108/ctp2
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  ctp2_code/libs/anet
subdirs_extra =  ctp2_code/libs/freetype-1.3.1
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
noinst_LTLIBRARIES = libgsgameobj.la
#CTP2_WIN32_FREETYPE_INC = \
#	-I$(ctp2_code)/ui/freetype

#CTP2_WIN32_MILES_INC = \
#	-I$(ctp2_code)/libs/miles

#CTP2_WIN32_ZLIB_INC = \
#	-I$(ctp2_code)/libs/zlib

CTP2_ANET_INC = -I$(ctp2_code)/libs/anet/h
libgsgameobj_la_SOURCES = \
	AchievementTracker.cpp \
	Advances.cpp \
	advanceutil.cpp \
	Agreement.cpp \
	AgreementData.cpp \
	AgreementPool.cpp \
	Army.cpp \
	ArmyData.cpp \
	armyevent.cpp \
	ArmyPool.cpp \
	barbarians.cpp \
	bldque.cpp \
	buildingutil.cpp \
	CityData.cpp \
	CityEvent.cpp \
	CityInfluenceIterator.cpp \
	CityRadius.cpp \
	Civilisation.cpp \
	CivilisationData.cpp \
	civilisationpool.cpp \
	combatevent.cpp \
	CriticalMessagesPrefs.cpp \
	CTP2Combat.cpp \
	Diffcly.cpp \
	Diplomacy_Log.cpp \
	DiplomaticRequest.cpp \
	DiplomaticRequestData.cpp \
	DiplomaticRequestPool.cpp \
	Events.cpp \
	EventTracker.cpp \
	Exclusions.cpp \
	FeatTracker.cpp \
	gaiacontroller.cpp \
	GameObj.cpp \
	GameSettings.cpp \
	Gold.cpp \
	GoodyHuts.cpp \
	GSLogs.cpp \
	Happy.cpp \
	happytracker.cpp \
	ID.cpp \
	improvementevent.cpp \
	installation.cpp \
	installationdata.cpp \
	installationpool.cpp \
	MaterialPool.cpp \
	Message.cpp \
	messagedata.cpp \
	MessagePool.cpp \
	ObjPool.cpp \
	Order.cpp \
	Player.cpp \
	PlayerEvent.cpp \
	PlayerTurn.cpp \
	PlayHap.cpp \
	Pollution.cpp \
	Readiness.cpp \
	Regard.cpp \
	Resources.cpp \
	Sci.cpp \
	Score.cpp \
	Strengths.cpp \
	TaxRate.cpp \
	terrainutil.cpp \
	TerrImprove.cpp \
	TerrImproveData.cpp \
	TerrImprovePool.cpp \
	TopTen.cpp \
	TradeBids.cpp \
	tradeevent.cpp \
	TradeOffer.cpp \
	TradeOfferData.cpp \
	TradeOfferPool.cpp \
	TradePool.cpp \
	TradeRoute.cpp \
	TradeRouteData.cpp \
	tradeutil.cpp \
	Unit.cpp \
	UnitData.cpp \
	unitevent.cpp \
	UnitPool.cpp \
	unitutil.cpp \
	Vision.cpp \
	WonderTracker.cpp \
	wonderutil.cpp \
	Wormhole.cpp \
	XY_Coordinates.cpp

libgsgameobj_la_LDFLAGS = -static
AM_CFLAGS = \
	$(CTP2_CFLAGS)

AM_CXXFLAGS = \
	$(CTP2_CXXFLAGS)

AM_CPPFLAGS = \
	$(CTP2_CPPFLAGS)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign ctp2_code/gs/gameobj/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign ctp2_code/gs/gameobj/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libgsgameobj.la: $(libgsgameobj_la_OBJECTS) $(libgsgameobj_la_DEPENDENCIES) $(EXTRA_libgsgameobj_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libgsgameobj_la_LINK)  $(libgsgameobj_la_OBJECTS) $(libgsgameobj_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AchievementTracker.Plo # am--include-marker
include ./$(DEPDIR)/Advances.Plo # am--include-marker
include ./$(DEPDIR)/Agreement.Plo # am--include-marker
include ./$(DEPDIR)/AgreementData.Plo # am--include-marker
include ./$(DEPDIR)/AgreementPool.Plo # am--include-marker
include ./$(DEPDIR)/Army.Plo # am--include-marker
include ./$(DEPDIR)/ArmyData.Plo # am--include-marker
include ./$(DEPDIR)/ArmyPool.Plo # am--include-marker
include ./$(DEPDIR)/CTP2Combat.Plo # am--include-marker
include ./$(DEPDIR)/CityData.Plo # am--include-marker
include ./$(DEPDIR)/CityEvent.Plo # am--include-marker
include ./$(DEPDIR)/CityInfluenceIterator.Plo # am--include-marker
include ./$(DEPDIR)/CityRadius.Plo # am--include-marker
include ./$(DEPDIR)/Civilisation.Plo # am--include-marker
include ./$(DEPDIR)/CivilisationData.Plo # am--include-marker
include ./$(DEPDIR)/CriticalMessagesPrefs.Plo # am--include-marker
include ./$(DEPDIR)/Diffcly.Plo # am--include-marker
include ./$(DEPDIR)/Diplomacy_Log.Plo # am--include-marker
include ./$(DEPDIR)/DiplomaticRequest.Plo # am--include-marker
include ./$(DEPDIR)/DiplomaticRequestData.Plo # am--include-marker
include ./$(DEPDIR)/DiplomaticRequestPool.Plo # am--include-marker
include ./$(DEPDIR)/EventTracker.Plo # am--include-marker
include ./$(DEPDIR)/Events.Plo # am--include-marker
include ./$(DEPDIR)/Exclusions.Plo # am--include-marker
include ./$(DEPDIR)/FeatTracker.Plo # am--include-marker
include ./$(DEPDIR)/GSLogs.Plo # am--include-marker
include ./$(DEPDIR)/GameObj.Plo # am--include-marker
include ./$(DEPDIR)/GameSettings.Plo # am--include-marker
include ./$(DEPDIR)/Gold.Plo # am--include-marker
include ./$(DEPDIR)/GoodyHuts.Plo # am--include-marker
include ./$(DEPDIR)/Happy.Plo # am--include-marker
include ./$(DEPDIR)/ID.Plo # am--include-marker
include ./$(DEPDIR)/MaterialPool.Plo # am--include-marker
include ./$(DEPDIR)/Message.Plo # am--include-marker
include ./$(DEPDIR)/MessagePool.Plo # am--include-marker
include ./$(DEPDIR)/ObjPool.Plo # am--include-marker
include ./$(DEPDIR)/Order.Plo # am--include-marker
include ./$(DEPDIR)/PlayHap.Plo # am--include-marker
include ./$(DEPDIR)/Player.Plo # am--include-marker
include ./$(DEPDIR)/PlayerEvent.Plo # am--include-marker
include ./$(DEPDIR)/PlayerTurn.Plo # am--include-marker
include ./$(DEPDIR)/Pollution.Plo # am--include-marker
include ./$(DEPDIR)/Readiness.Plo # am--include-marker
include ./$(DEPDIR)/Regard.Plo # am--include-marker
include ./$(DEPDIR)/Resources.Plo # am--include-marker
include ./$(DEPDIR)/Sci.Plo # am--include-marker
include ./$(DEPDIR)/Score.Plo # am--include-marker
include ./$(DEPDIR)/Strengths.Plo # am--include-marker
include ./$(DEPDIR)/TaxRate.Plo # am--include-marker
include ./$(DEPDIR)/TerrImprove.Plo # am--include-marker
include ./$(DEPDIR)/TerrImproveData.Plo # am--include-marker
include ./$(DEPDIR)/TerrImprovePool.Plo # am--include-marker
include ./$(DEPDIR)/TopTen.Plo # am--include-marker
include ./$(DEPDIR)/TradeBids.Plo # am--include-marker
include ./$(DEPDIR)/TradeOffer.Plo # am--include-marker
include ./$(DEPDIR)/TradeOfferData.Plo # am--include-marker
include ./$(DEPDIR)/TradeOfferPool.Plo # am--include-marker
include ./$(DEPDIR)/TradePool.Plo # am--include-marker
include ./$(DEPDIR)/TradeRoute.Plo # am--include-marker
include ./$(DEPDIR)/TradeRouteData.Plo # am--include-marker
include ./$(DEPDIR)/Unit.Plo # am--include-marker
include ./$(DEPDIR)/UnitData.Plo # am--include-marker
include ./$(DEPDIR)/UnitPool.Plo # am--include-marker
include ./$(DEPDIR)/Vision.Plo # am--include-marker
include ./$(DEPDIR)/WonderTracker.Plo # am--include-marker
include ./$(DEPDIR)/Wormhole.Plo # am--include-marker
include ./$(DEPDIR)/XY_Coordinates.Plo # am--include-marker
include ./$(DEPDIR)/advanceutil.Plo # am--include-marker
include ./$(DEPDIR)/armyevent.Plo # am--include-marker
include ./$(DEPDIR)/barbarians.Plo # am--include-marker
include ./$(DEPDIR)/bldque.Plo # am--include-marker
include ./$(DEPDIR)/buildingutil.Plo # am--include-marker
include ./$(DEPDIR)/civilisationpool.Plo # am--include-marker
include ./$(DEPDIR)/combatevent.Plo # am--include-marker
include ./$(DEPDIR)/gaiacontroller.Plo # am--include-marker
include ./$(DEPDIR)/happytracker.Plo # am--include-marker
include ./$(DEPDIR)/improvementevent.Plo # am--include-marker
include ./$(DEPDIR)/installation.Plo # am--include-marker
include ./$(DEPDIR)/installationdata.Plo # am--include-marker
include ./$(DEPDIR)/installationpool.Plo # am--include-marker
include ./$(DEPDIR)/messagedata.Plo # am--include-marker
include ./$(DEPDIR)/terrainutil.Plo # am--include-marker
include ./$(DEPDIR)/tradeevent.Plo # am--include-marker
include ./$(DEPDIR)/tradeutil.Plo # am--include-marker
include ./$(DEPDIR)/unitevent.Plo # am--include-marker
include ./$(DEPDIR)/unitutil.Plo # am--include-marker
include ./$(DEPDIR)/wonderutil.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/AchievementTracker.Plo
	-rm -f ./$(DEPDIR)/Advances.Plo
	-rm -f ./$(DEPDIR)/Agreement.Plo
	-rm -f ./$(DEPDIR)/AgreementData.Plo
	-rm -f ./$(DEPDIR)/AgreementPool.Plo
	-rm -f ./$(DEPDIR)/Army.Plo
	-rm -f ./$(DEPDIR)/ArmyData.Plo
	-rm -f ./$(DEPDIR)/ArmyPool.Plo
	-rm -f ./$(DEPDIR)/CTP2Combat.Plo
	-rm -f ./$(DEPDIR)/CityData.Plo
	-rm -f ./$(DEPDIR)/CityEvent.Plo
	-rm -f ./$(DEPDIR)/CityInfluenceIterator.Plo
	-rm -f ./$(DEPDIR)/CityRadius.Plo
	-rm -f ./$(DEPDIR)/Civilisation.Plo
	-rm -f ./$(DEPDIR)/CivilisationData.Plo
	-rm -f ./$(DEPDIR)/CriticalMessagesPrefs.Plo
	-rm -f ./$(DEPDIR)/Diffcly.Plo
	-rm -f ./$(DEPDIR)/Diplomacy_Log.Plo
	-rm -f ./$(DEPDIR)/DiplomaticRequest.Plo
	-rm -f ./$(DEPDIR)/DiplomaticRequestData.Plo
	-rm -f ./$(DEPDIR)/DiplomaticRequestPool.Plo
	-rm -f ./$(DEPDIR)/EventTracker.Plo
	-rm -f ./$(DEPDIR)/Events.Plo
	-rm -f ./$(DEPDIR)/Exclusions.Plo
	-rm -f ./$(DEPDIR)/FeatTracker.Plo
	-rm -f ./$(DEPDIR)/GSLogs.Plo
	-rm -f ./$(DEPDIR)/GameObj.Plo
	-rm -f ./$(DEPDIR)/GameSettings.Plo
	-rm -f ./$(DEPDIR)/Gold.Plo
	-rm -f ./$(DEPDIR)/GoodyHuts.Plo
	-rm -f ./$(DEPDIR)/Happy.Plo
	-rm -f ./$(DEPDIR)/ID.Plo
	-rm -f ./$(DEPDIR)/MaterialPool.Plo
	-rm -f ./$(DEPDIR)/Message.Plo
	-rm -f ./$(DEPDIR)/MessagePool.Plo
	-rm -f ./$(DEPDIR)/ObjPool.Plo
	-rm -f ./$(DEPDIR)/Order.Plo
	-rm -f ./$(DEPDIR)/PlayHap.Plo
	-rm -f ./$(DEPDIR)/Player.Plo
	-rm -f ./$(DEPDIR)/PlayerEvent.Plo
	-rm -f ./$(DEPDIR)/PlayerTurn.Plo
	-rm -f ./$(DEPDIR)/Pollution.Plo
	-rm -f ./$(DEPDIR)/Readiness.Plo
	-rm -f ./$(DEPDIR)/Regard.Plo
	-rm -f ./$(DEPDIR)/Resources.Plo
	-rm -f ./$(DEPDIR)/Sci.Plo
	-rm -f ./$(DEPDIR)/Score.Plo
	-rm -f ./$(DEPDIR)/Strengths.Plo
	-rm -f ./$(DEPDIR)/TaxRate.Plo
	-rm -f ./$(DEPDIR)/TerrImprove.Plo
	-rm -f ./$(DEPDIR)/TerrImproveData.Plo
	-rm -f ./$(DEPDIR)/TerrImprovePool.Plo
	-rm -f ./$(DEPDIR)/TopTen.Plo
	-rm -f ./$(DEPDIR)/TradeBids.Plo
	-rm -f ./$(DEPDIR)/TradeOffer.Plo
	-rm -f ./$(DEPDIR)/TradeOfferData.Plo
	-rm -f ./$(DEPDIR)/TradeOfferPool.Plo
	-rm -f ./$(DEPDIR)/TradePool.Plo
	-rm -f ./$(DEPDIR)/TradeRoute.Plo
	-rm -f ./$(DEPDIR)/TradeRouteData.Plo
	-rm -f ./$(DEPDIR)/Unit.Plo
	-rm -f ./$(DEPDIR)/UnitData.Plo
	-rm -f ./$(DEPDIR)/UnitPool.Plo
	-rm -f ./$(DEPDIR)/Vision.Plo
	-rm -f ./$(DEPDIR)/WonderTracker.Plo
	-rm -f ./$(DEPDIR)/Wormhole.Plo
	-rm -f ./$(DEPDIR)/XY_Coordinates.Plo
	-rm -f ./$(DEPDIR)/advanceutil.Plo
	-rm -f ./$(DEPDIR)/armyevent.Plo
	-rm -f ./$(DEPDIR)/barbarians.Plo
	-rm -f ./$(DEPDIR)/bldque.Plo
	-rm -f ./$(DEPDIR)/buildingutil.Plo
	-rm -f ./$(DEPDIR)/civilisationpool.Plo
	-rm -f ./$(DEPDIR)/combatevent.Plo
	-rm -f ./$(DEPDIR)/gaiacontroller.Plo
	-rm -f ./$(DEPDIR)/happytracker.Plo
	-rm -f ./$(DEPDIR)/improvementevent.Plo
	-rm -f ./$(DEPDIR)/installation.Plo
	-rm -f ./$(DEPDIR)/installationdata.Plo
	-rm -f ./$(DEPDIR)/installationpool.Plo
	-rm -f ./$(DEPDIR)/messagedata.Plo
	-rm -f ./$(DEPDIR)/terrainutil.Plo
	-rm -f ./$(DEPDIR)/tradeevent.Plo
	-rm -f ./$(DEPDIR)/tradeutil.Plo
	-rm -f ./$(DEPDIR)/unitevent.Plo
	-rm -f ./$(DEPDIR)/unitutil.Plo
	-rm -f ./$(DEPDIR)/wonderutil.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/AchievementTracker.Plo
	-rm -f ./$(DEPDIR)/Advances.Plo
	-rm -f ./$(DEPDIR)/Agreement.Plo
	-rm -f ./$(DEPDIR)/AgreementData.Plo
	-rm -f ./$(DEPDIR)/AgreementPool.Plo
	-rm -f ./$(DEPDIR)/Army.Plo
	-rm -f ./$(DEPDIR)/ArmyData.Plo
	-rm -f ./$(DEPDIR)/ArmyPool.Plo
	-rm -f ./$(DEPDIR)/CTP2Combat.Plo
	-rm -f ./$(DEPDIR)/CityData.Plo
	-rm -f ./$(DEPDIR)/CityEvent.Plo
	-rm -f ./$(DEPDIR)/CityInfluenceIterator.Plo
	-rm -f ./$(DEPDIR)/CityRadius.Plo
	-rm -f ./$(DEPDIR)/Civilisation.Plo
	-rm -f ./$(DEPDIR)/CivilisationData.Plo
	-rm -f ./$(DEPDIR)/CriticalMessagesPrefs.Plo
	-rm -f ./$(DEPDIR)/Diffcly.Plo
	-rm -f ./$(DEPDIR)/Diplomacy_Log.Plo
	-rm -f ./$(DEPDIR)/DiplomaticRequest.Plo
	-rm -f ./$(DEPDIR)/DiplomaticRequestData.Plo
	-rm -f ./$(DEPDIR)/DiplomaticRequestPool.Plo
	-rm -f ./$(DEPDIR)/EventTracker.Plo
	-rm -f ./$(DEPDIR)/Events.Plo
	-rm -f ./$(DEPDIR)/Exclusions.Plo
	-rm -f ./$(DEPDIR)/FeatTracker.Plo
	-rm -f ./$(DEPDIR)/GSLogs.Plo
	-rm -f ./$(DEPDIR)/GameObj.Plo
	-rm -f ./$(DEPDIR)/GameSettings.Plo
	-rm -f ./$(DEPDIR)/Gold.Plo
	-rm -f ./$(DEPDIR)/GoodyHuts.Plo
	-rm -f ./$(DEPDIR)/Happy.Plo
	-rm -f ./$(DEPDIR)/ID.Plo
	-rm -f ./$(DEPDIR)/MaterialPool.Plo
	-rm -f ./$(DEPDIR)/Message.Plo
	-rm -f ./$(DEPDIR)/MessagePool.Plo
	-rm -f ./$(DEPDIR)/ObjPool.Plo
	-rm -f ./$(DEPDIR)/Order.Plo
	-rm -f ./$(DEPDIR)/PlayHap.Plo
	-rm -f ./$(DEPDIR)/Player.Plo
	-rm -f ./$(DEPDIR)/PlayerEvent.Plo
	-rm -f ./$(DEPDIR)/PlayerTurn.Plo
	-rm -f ./$(DEPDIR)/Pollution.Plo
	-rm -f ./$(DEPDIR)/Readiness.Plo
	-rm -f ./$(DEPDIR)/Regard.Plo
	-rm -f ./$(DEPDIR)/Resources.Plo
	-rm -f ./$(DEPDIR)/Sci.Plo
	-rm -f ./$(DEPDIR)/Score.Plo
	-rm -f ./$(DEPDIR)/Strengths.Plo
	-rm -f ./$(DEPDIR)/TaxRate.Plo
	-rm -f ./$(DEPDIR)/TerrImprove.Plo
	-rm -f ./$(DEPDIR)/TerrImproveData.Plo
	-rm -f ./$(DEPDIR)/TerrImprovePool.Plo
	-rm -f ./$(DEPDIR)/TopTen.Plo
	-rm -f ./$(DEPDIR)/TradeBids.Plo
	-rm -f ./$(DEPDIR)/TradeOffer.Plo
	-rm -f ./$(DEPDIR)/TradeOfferData.Plo
	-rm -f ./$(DEPDIR)/TradeOfferPool.Plo
	-rm -f ./$(DEPDIR)/TradePool.Plo
	-rm -f ./$(DEPDIR)/TradeRoute.Plo
	-rm -f ./$(DEPDIR)/TradeRouteData.Plo
	-rm -f ./$(DEPDIR)/Unit.Plo
	-rm -f ./$(DEPDIR)/UnitData.Plo
	-rm -f ./$(DEPDIR)/UnitPool.Plo
	-rm -f ./$(DEPDIR)/Vision.Plo
	-rm -f ./$(DEPDIR)/WonderTracker.Plo
	-rm -f ./$(DEPDIR)/Wormhole.Plo
	-rm -f ./$(DEPDIR)/XY_Coordinates.Plo
	-rm -f ./$(DEPDIR)/advanceutil.Plo
	-rm -f ./$(DEPDIR)/armyevent.Plo
	-rm -f ./$(DEPDIR)/barbarians.Plo
	-rm -f ./$(DEPDIR)/bldque.Plo
	-rm -f ./$(DEPDIR)/buildingutil.Plo
	-rm -f ./$(DEPDIR)/civilisationpool.Plo
	-rm -f ./$(DEPDIR)/combatevent.Plo
	-rm -f ./$(DEPDIR)/gaiacontroller.Plo
	-rm -f ./$(DEPDIR)/happytracker.Plo
	-rm -f ./$(DEPDIR)/improvementevent.Plo
	-rm -f ./$(DEPDIR)/installation.Plo
	-rm -f ./$(DEPDIR)/installationdata.Plo
	-rm -f ./$(DEPDIR)/installationpool.Plo
	-rm -f ./$(DEPDIR)/messagedata.Plo
	-rm -f ./$(DEPDIR)/terrainutil.Plo
	-rm -f ./$(DEPDIR)/tradeevent.Plo
	-rm -f ./$(DEPDIR)/tradeutil.Plo
	-rm -f ./$(DEPDIR)/unitevent.Plo
	-rm -f ./$(DEPDIR)/unitutil.Plo
	-rm -f ./$(DEPDIR)/wonderutil.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


include $(ctp2_code)/os/autoconf/Makefile.common

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
