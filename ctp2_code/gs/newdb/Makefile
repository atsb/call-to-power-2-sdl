# Makefile.in generated by automake 1.16.5 from Makefile.am.
# ctp2_code/gs/newdb/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# $Id$
#


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/ctp2
pkgincludedir = $(includedir)/ctp2
pkglibdir = $(libdir)/ctp2
pkglibexecdir = $(libexecdir)/ctp2
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
subdir = ctp2_code/gs/newdb
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/ctp2_code/libs/anet/macros/libtool.m4 \
	$(top_srcdir)/ctp2_code/libs/anet/macros/ltoptions.m4 \
	$(top_srcdir)/ctp2_code/libs/anet/macros/ltsugar.m4 \
	$(top_srcdir)/ctp2_code/libs/anet/macros/ltversion.m4 \
	$(top_srcdir)/ctp2_code/libs/anet/macros/lt~obsolete.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/ax_subdirs_configure.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/os_defs.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/pathnames.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/win32_directx.m4 \
	$(top_srcdir)/ctp2_code/os/autoconf/win32_dxmedia.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/ctp2_code/os/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libgsnewdb_a_AR = $(AR) $(ARFLAGS)
libgsnewdb_a_LIBADD =
am_libgsnewdb_a_OBJECTS = lex.dbl.$(OBJEXT) \
	AdvanceBranchRecord.$(OBJEXT) AdvanceListRecord.$(OBJEXT) \
	AdvanceRecord.$(OBJEXT) AgeCityStyleRecord.$(OBJEXT) \
	AgeRecord.$(OBJEXT) BuildingBuildListRecord.$(OBJEXT) \
	BuildingRecord.$(OBJEXT) BuildListSequenceRecord.$(OBJEXT) \
	CitySizeRecord.$(OBJEXT) CityStyleRecord.$(OBJEXT) \
	CivilisationRecord.$(OBJEXT) ConceptRecord.$(OBJEXT) \
	ConstRecord.$(OBJEXT) CultureRecord.$(OBJEXT) \
	DifficultyRecord.$(OBJEXT) DiplomacyProposalRecord.$(OBJEXT) \
	DiplomacyRecord.$(OBJEXT) DiplomacyThreatRecord.$(OBJEXT) \
	EndGameObjectRecord.$(OBJEXT) FeatRecord.$(OBJEXT) \
	GlobalWarmingRecord.$(OBJEXT) GoalRecord.$(OBJEXT) \
	GovernmentRecord.$(OBJEXT) IconRecord.$(OBJEXT) \
	ImprovementListRecord.$(OBJEXT) LeaderRecord.$(OBJEXT) \
	MapIconRecord.$(OBJEXT) MapRecord.$(OBJEXT) \
	OrderRecord.$(OBJEXT) PersonalityRecord.$(OBJEXT) \
	PollutionRecord.$(OBJEXT) PopRecord.$(OBJEXT) \
	ReligionRecord.$(OBJEXT) ResourceRecord.$(OBJEXT) \
	RiskRecord.$(OBJEXT) SoundRecord.$(OBJEXT) \
	SpecialAttackInfoRecord.$(OBJEXT) \
	SpecialEffectRecord.$(OBJEXT) SpriteRecord.$(OBJEXT) \
	StrategyRecord.$(OBJEXT) TerrainImprovementRecord.$(OBJEXT) \
	TerrainRecord.$(OBJEXT) UnitBuildListRecord.$(OBJEXT) \
	UnitpromotionRecord.$(OBJEXT) UnitRecord.$(OBJEXT) \
	WonderBuildListRecord.$(OBJEXT) WonderMovieRecord.$(OBJEXT) \
	WonderRecord.$(OBJEXT) CTPDatabase.$(OBJEXT) \
	CTPRecord.$(OBJEXT) DBLexer.$(OBJEXT) DBLexer.$(OBJEXT)
libgsnewdb_a_OBJECTS = $(am_libgsnewdb_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/ctp2_code/os/include
depcomp = $(SHELL) $(top_srcdir)/ctp2_code/os/autoconf/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/AdvanceBranchRecord.Po \
	./$(DEPDIR)/AdvanceListRecord.Po ./$(DEPDIR)/AdvanceRecord.Po \
	./$(DEPDIR)/AgeCityStyleRecord.Po ./$(DEPDIR)/AgeRecord.Po \
	./$(DEPDIR)/BuildListSequenceRecord.Po \
	./$(DEPDIR)/BuildingBuildListRecord.Po \
	./$(DEPDIR)/BuildingRecord.Po ./$(DEPDIR)/CTPDatabase.Po \
	./$(DEPDIR)/CTPRecord.Po ./$(DEPDIR)/CitySizeRecord.Po \
	./$(DEPDIR)/CityStyleRecord.Po \
	./$(DEPDIR)/CivilisationRecord.Po ./$(DEPDIR)/ConceptRecord.Po \
	./$(DEPDIR)/ConstRecord.Po ./$(DEPDIR)/CultureRecord.Po \
	./$(DEPDIR)/DBLexer.Po ./$(DEPDIR)/DifficultyRecord.Po \
	./$(DEPDIR)/DiplomacyProposalRecord.Po \
	./$(DEPDIR)/DiplomacyRecord.Po \
	./$(DEPDIR)/DiplomacyThreatRecord.Po \
	./$(DEPDIR)/EndGameObjectRecord.Po ./$(DEPDIR)/FeatRecord.Po \
	./$(DEPDIR)/GlobalWarmingRecord.Po ./$(DEPDIR)/GoalRecord.Po \
	./$(DEPDIR)/GovernmentRecord.Po ./$(DEPDIR)/IconRecord.Po \
	./$(DEPDIR)/ImprovementListRecord.Po \
	./$(DEPDIR)/LeaderRecord.Po ./$(DEPDIR)/MapIconRecord.Po \
	./$(DEPDIR)/MapRecord.Po ./$(DEPDIR)/OrderRecord.Po \
	./$(DEPDIR)/PersonalityRecord.Po \
	./$(DEPDIR)/PollutionRecord.Po ./$(DEPDIR)/PopRecord.Po \
	./$(DEPDIR)/ReligionRecord.Po ./$(DEPDIR)/ResourceRecord.Po \
	./$(DEPDIR)/RiskRecord.Po ./$(DEPDIR)/SoundRecord.Po \
	./$(DEPDIR)/SpecialAttackInfoRecord.Po \
	./$(DEPDIR)/SpecialEffectRecord.Po ./$(DEPDIR)/SpriteRecord.Po \
	./$(DEPDIR)/StrategyRecord.Po \
	./$(DEPDIR)/TerrainImprovementRecord.Po \
	./$(DEPDIR)/TerrainRecord.Po \
	./$(DEPDIR)/UnitBuildListRecord.Po ./$(DEPDIR)/UnitRecord.Po \
	./$(DEPDIR)/UnitpromotionRecord.Po \
	./$(DEPDIR)/WonderBuildListRecord.Po \
	./$(DEPDIR)/WonderMovieRecord.Po ./$(DEPDIR)/WonderRecord.Po \
	./$(DEPDIR)/lex.dbl.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libgsnewdb_a_SOURCES)
DIST_SOURCES = $(libgsnewdb_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/ctp2_code/os/autoconf/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/os/autoconf/config/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} '/home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/os/autoconf/config/missing' autoconf
AUTOHEADER = ${SHELL} '/home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/os/autoconf/config/missing' autoheader
AUTOMAKE = ${SHELL} '/home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/os/autoconf/config/missing' automake-1.16
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -Wno-unused-variable -fpermissive -fms-extensions -fmessage-length=0 -g 
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CTP2_ENABLE_SLICDEBUG = 
CTP2_NOWIN32_INC = -I$(ctp2_code)/os/nowin32
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall -Wno-unused-variable -fpermissive -fms-extensions -fmessage-length=0 -frtti -fexceptions -g 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIRECTX_INCLUDES = 
DIRECTX_LDADD = 
DIRECTX_SDKDIR = 
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
DXMEDIA_INCLUDES = 
DXMEDIA_LDADD = 
DXMEDIA_SDKDIR = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
FGREP = /usr/bin/grep -F
FILECMD = @FILECMD@
GREP = /usr/bin/grep
HAVE_CXX11 = 1
HTLATEX = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LEXLIB = -ll 
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINDEX = 
MAKEINFO = ${SHELL} '/home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/os/autoconf/config/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = ctp2
PACKAGE_BUGREPORT = 
PACKAGE_NAME = ctp2
PACKAGE_STRING = ctp2 1.2
PACKAGE_TARNAME = ctp2
PACKAGE_URL = 
PACKAGE_VERSION = 1.2
PATH_SEPARATOR = :
PDFLATEX = 
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SDL2_CONFIG = pkg-config sdl2
SDL2_FRAMEWORK = 
SDL_CFLAGS = -D_REENTRANT -I/usr/include/SDL2
SDL_LIBS = -lSDL2
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
THUMBPDF = 
UNZIP = /usr/bin/unzip
VERSION = 1.2
VIEWPDF = 
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
YACC = /usr/bin/byacc
YFLAGS = -d -v
_BFR_ = 
abs_builddir = /home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/gs/newdb
abs_srcdir = /home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/gs/newdb
abs_top_builddir = /home/wq108/Downloads/ctp2-mainfff/ctp2-main
abs_top_srcdir = /home/wq108/Downloads/ctp2-mainfff/ctp2-main
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
ctp2_code = $(top_srcdir)/ctp2_code
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/wq108/Downloads/ctp2-mainfff/ctp2-main/ctp2_code/os/autoconf/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/wq108/ctp2
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  ctp2_code/libs/anet
subdirs_extra =  ctp2_code/libs/freetype-1.3.1
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
noinst_LIBRARIES = libgsnewdb.a
# This hack shortens include path list,
# but prohibits using a separate build dir
#ctp2_code=..
#CTP2_WIN32_FREETYPE_INC = \
#	-I$(ctp2_code)/ui/freetype

#CTP2_WIN32_MILES_INC = \
#	-I$(ctp2_code)/libs/miles

#CTP2_WIN32_ZLIB_INC = \
#	-I$(ctp2_code)/libs/zlib

CTP2_ANET_INC = -I$(ctp2_code)/libs/anet/h

#libgsnewdb_a_LDFLAGS = -static
libgsnewdb_a_SOURCES = \
	lex.dbl.c \
	AdvanceBranchRecord.cpp \
	AdvanceListRecord.cpp \
	AdvanceRecord.cpp \
	AgeCityStyleRecord.cpp \
	AgeRecord.cpp \
	BuildingBuildListRecord.cpp \
	BuildingRecord.cpp \
	BuildListSequenceRecord.cpp \
	CitySizeRecord.cpp \
	CityStyleRecord.cpp \
	CivilisationRecord.cpp \
	ConceptRecord.cpp \
	ConstRecord.cpp \
	CultureRecord.cpp \
	DifficultyRecord.cpp \
	DiplomacyProposalRecord.cpp \
	DiplomacyRecord.cpp \
	DiplomacyThreatRecord.cpp \
	EndGameObjectRecord.cpp \
	FeatRecord.cpp \
	GlobalWarmingRecord.cpp \
	GoalRecord.cpp \
	GovernmentRecord.cpp \
	IconRecord.cpp \
	ImprovementListRecord.cpp \
	LeaderRecord.cpp \
	MapIconRecord.cpp \
	MapRecord.cpp \
	OrderRecord.cpp \
	PersonalityRecord.cpp \
	PollutionRecord.cpp \
	PopRecord.cpp \
	ReligionRecord.cpp \
	ResourceRecord.cpp \
	RiskRecord.cpp \
	SoundRecord.cpp \
	SpecialAttackInfoRecord.cpp \
	SpecialEffectRecord.cpp \
	SpriteRecord.cpp \
	StrategyRecord.cpp \
	TerrainImprovementRecord.cpp \
	TerrainRecord.cpp \
	UnitBuildListRecord.cpp \
	UnitpromotionRecord.cpp \
	UnitRecord.cpp \
	WonderBuildListRecord.cpp \
	WonderMovieRecord.cpp \
	WonderRecord.cpp \
	CTPDatabase.cpp \
	CTPRecord.cpp \
	DBLexer.cpp \
	DBLexer.cpp

newdb_CDBTYPES = \
	AdvanceBranchRecord \
	AdvanceListRecord \
	AdvanceRecord \
	AgeCityStyleRecord \
	AgeRecord \
	BuildListSequenceRecord \
	BuildingBuildListRecord \
	BuildingRecord \
	CitySizeRecord \
	CityStyleRecord \
	CivilisationRecord \
	ConceptRecord \
	ConstRecord \
	CultureRecord \
	DifficultyRecord \
	DiplomacyProposalRecord \
	DiplomacyRecord \
	DiplomacyThreatRecord \
	EndGameObjectRecord \
	FeatRecord \
	GlobalWarmingRecord \
	GoalRecord \
	GovernmentRecord \
	IconRecord \
	ImprovementListRecord \
	LeaderRecord \
	MapIconRecord \
	MapRecord \
	OrderRecord \
	PersonalityRecord \
	PollutionRecord \
	PopRecord \
	ReligionRecord \
	ResourceRecord \
	RiskRecord \
	SoundRecord \
	SpecialAttackInfoRecord \
	SpecialEffectRecord \
	SpriteRecord \
	StrategyRecord \
	TerrainImprovementRecord \
	TerrainRecord \
	UnitBuildListRecord \
	UnitpromotionRecord \
	UnitRecord \
	WonderBuildListRecord \
	WonderMovieRecord \
	WonderRecord

newdb_CDBSRCFILES = \
	$(foreach type,$(newdb_CDBTYPES),$(type).cpp )

newdb_CDBHDRFILES = \
	$(foreach type,$(newdb_CDBTYPES),$(type).h )

newdb_CDBSTAMPFILES = \
	$(foreach type,$(newdb_CDBTYPES),$(type).stamp )

CTPDB = $(top_builddir)/ctp2_code/gs/dbgen/ctpdb$(EXEEXT)
AM_CXXFLAGS = \
	$(SDL_CFLAGS)

AM_CPPFLAGS = \
	$(CTP2_NOWIN32_INC) \
	$(DIRECTX_INCLUDES) \
	$(DXMEDIA_INCLUDES) \
	-I$(ctp2_code)/os/include \
	-I$(ctp2_code)/ctp \
	-I$(ctp2_code)/ctp/ctp2_utils \
	-I$(ctp2_code)/ctp/ctp2_rsrc \
	$(CTP2_WIN32_RSRC_INC) \
	-I$(ctp2_code)/ctp/debugtools \
		$(INCORDER_ctp2_code__libs__freetype__lib) \
		$(INCORDER_ctp2_code__libs__freetype__utils) \
		$(INCORDER_ctp2_code__libs__freetype__win32) \
	-I$(ctp2_code)/ui/interface \
	-I$(ctp2_code)/ui/netshell \
	-I$(ctp2_code)/robot/utility \
	-I$(ctp2_code)/robot/pathing \
	-I$(ctp2_code)/robot/aibackdoor \
	$(CTP2_WIN32_FREETYPE_INC) \
	-I$(ctp2_code)/gfx/spritesys \
	-I$(ctp2_code)/gfx/tilesys \
	-I$(ctp2_code)/gfx/gfx_utils \
	-I$(ctp2_code)/gs/database \
	-I$(ctp2_code)/gs/fileio \
	-I$(ctp2_code)/gs/gameobj \
	-I$(ctp2_code)/gs/utility \
	-I$(ctp2_code)/gs/world \
	-I$(ctp2_code)/net/io \
	-I$(ctp2_code)/net/general \
	-I$(ctp2_code)/ui/aui_utils \
	-I$(ctp2_code)/ui/aui_sdl \
	-I$(ctp2_code)/ui/aui_directx \
	-I$(ctp2_code)/ui/aui_ctp2 \
	-I$(ctp2_code)/ui/aui_common \
		$(INCORDER_ctp2_code__libs__tiff) \
		$(CTP2_ANET_INC) \
	-I$(ctp2_code)/mm \
	-I$(ctp2_code)/robotcom/backdoor \
	-I$(ctp2_code)/gs/slic \
	-I$(ctp2_code)/gfx/layers \
	-I$(ctp2_code)/mapgen \
	-I$(ctp2_code)/ui/freetype \
	-I$(ctp2_code)/sound \
	-I$(ctp2_code)/GameWatch/gamewatch \
	-I$(ctp2_code)/GameWatch/gwciv \
	$(CTP2_WIN32_MILES_INC) \
	-I$(ctp2_code)/ctp/fingerprint \
	$(CTP2_WIN32_ZLIB_INC) \
	-I$(ctp2_code)/ui/slic_debug \
	-I$(ctp2_code)/gs/outcom \
	-I$(ctp2_code)/ctp \
	-I$(ctp2_code)/ui/aui_common \
	-I$(ctp2_code)/ui/ldl \
		$(INCORDER_ctp2_code__libs__dxmedia__classes__base) \
		$(INCORDER_ctp2_code__libs__dxmedia__include) \
		$(INCORDER_ctp2_code__libs__directx__include) \
	-I$(ctp2_code)/gs/events \
	-I$(top_builddir)/ctp2_code/gs/newdb \
	-I$(ctp2_code)/gs/newdb \
	-I$(ctp2_code)/ai/diplomacy \
	-I$(ctp2_code)/ai/mapanalysis \
	-I$(ctp2_code)/ai/strategy/scheduler \
	-I$(ctp2_code)/ai/strategy/agents \
	-I$(ctp2_code)/ai/strategy/goals \
	-I$(ctp2_code)/ai/strategy/squads \
	-I$(ctp2_code)/ai \
	-I$(ctp2_code)/ai/citymanagement

MOSTLYCLEANFILES = \
	$(newdb_CDBSRCFILES) \
	$(newdb_CDBHDRFILES) \
	$(newdb_CDBSTAMPFILES) \
	$(foreach src,$(newdb_CDBSRCFILES),$(src).old $(src).new ) \
	$(foreach hdr,$(newdb_CDBHDRFILES),$(hdr).old $(hdr).new ) \
	$(foreach stamp,$(newdb_CDBSTAMPFILES),$(stamp).old $(stamp).new )

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign ctp2_code/gs/newdb/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign ctp2_code/gs/newdb/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libgsnewdb.a: $(libgsnewdb_a_OBJECTS) $(libgsnewdb_a_DEPENDENCIES) $(EXTRA_libgsnewdb_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libgsnewdb.a
	$(AM_V_AR)$(libgsnewdb_a_AR) libgsnewdb.a $(libgsnewdb_a_OBJECTS) $(libgsnewdb_a_LIBADD)
	$(AM_V_at)$(RANLIB) libgsnewdb.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AdvanceBranchRecord.Po # am--include-marker
include ./$(DEPDIR)/AdvanceListRecord.Po # am--include-marker
include ./$(DEPDIR)/AdvanceRecord.Po # am--include-marker
include ./$(DEPDIR)/AgeCityStyleRecord.Po # am--include-marker
include ./$(DEPDIR)/AgeRecord.Po # am--include-marker
include ./$(DEPDIR)/BuildListSequenceRecord.Po # am--include-marker
include ./$(DEPDIR)/BuildingBuildListRecord.Po # am--include-marker
include ./$(DEPDIR)/BuildingRecord.Po # am--include-marker
include ./$(DEPDIR)/CTPDatabase.Po # am--include-marker
include ./$(DEPDIR)/CTPRecord.Po # am--include-marker
include ./$(DEPDIR)/CitySizeRecord.Po # am--include-marker
include ./$(DEPDIR)/CityStyleRecord.Po # am--include-marker
include ./$(DEPDIR)/CivilisationRecord.Po # am--include-marker
include ./$(DEPDIR)/ConceptRecord.Po # am--include-marker
include ./$(DEPDIR)/ConstRecord.Po # am--include-marker
include ./$(DEPDIR)/CultureRecord.Po # am--include-marker
include ./$(DEPDIR)/DBLexer.Po # am--include-marker
include ./$(DEPDIR)/DifficultyRecord.Po # am--include-marker
include ./$(DEPDIR)/DiplomacyProposalRecord.Po # am--include-marker
include ./$(DEPDIR)/DiplomacyRecord.Po # am--include-marker
include ./$(DEPDIR)/DiplomacyThreatRecord.Po # am--include-marker
include ./$(DEPDIR)/EndGameObjectRecord.Po # am--include-marker
include ./$(DEPDIR)/FeatRecord.Po # am--include-marker
include ./$(DEPDIR)/GlobalWarmingRecord.Po # am--include-marker
include ./$(DEPDIR)/GoalRecord.Po # am--include-marker
include ./$(DEPDIR)/GovernmentRecord.Po # am--include-marker
include ./$(DEPDIR)/IconRecord.Po # am--include-marker
include ./$(DEPDIR)/ImprovementListRecord.Po # am--include-marker
include ./$(DEPDIR)/LeaderRecord.Po # am--include-marker
include ./$(DEPDIR)/MapIconRecord.Po # am--include-marker
include ./$(DEPDIR)/MapRecord.Po # am--include-marker
include ./$(DEPDIR)/OrderRecord.Po # am--include-marker
include ./$(DEPDIR)/PersonalityRecord.Po # am--include-marker
include ./$(DEPDIR)/PollutionRecord.Po # am--include-marker
include ./$(DEPDIR)/PopRecord.Po # am--include-marker
include ./$(DEPDIR)/ReligionRecord.Po # am--include-marker
include ./$(DEPDIR)/ResourceRecord.Po # am--include-marker
include ./$(DEPDIR)/RiskRecord.Po # am--include-marker
include ./$(DEPDIR)/SoundRecord.Po # am--include-marker
include ./$(DEPDIR)/SpecialAttackInfoRecord.Po # am--include-marker
include ./$(DEPDIR)/SpecialEffectRecord.Po # am--include-marker
include ./$(DEPDIR)/SpriteRecord.Po # am--include-marker
include ./$(DEPDIR)/StrategyRecord.Po # am--include-marker
include ./$(DEPDIR)/TerrainImprovementRecord.Po # am--include-marker
include ./$(DEPDIR)/TerrainRecord.Po # am--include-marker
include ./$(DEPDIR)/UnitBuildListRecord.Po # am--include-marker
include ./$(DEPDIR)/UnitRecord.Po # am--include-marker
include ./$(DEPDIR)/UnitpromotionRecord.Po # am--include-marker
include ./$(DEPDIR)/WonderBuildListRecord.Po # am--include-marker
include ./$(DEPDIR)/WonderMovieRecord.Po # am--include-marker
include ./$(DEPDIR)/WonderRecord.Po # am--include-marker
include ./$(DEPDIR)/lex.dbl.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/AdvanceBranchRecord.Po
	-rm -f ./$(DEPDIR)/AdvanceListRecord.Po
	-rm -f ./$(DEPDIR)/AdvanceRecord.Po
	-rm -f ./$(DEPDIR)/AgeCityStyleRecord.Po
	-rm -f ./$(DEPDIR)/AgeRecord.Po
	-rm -f ./$(DEPDIR)/BuildListSequenceRecord.Po
	-rm -f ./$(DEPDIR)/BuildingBuildListRecord.Po
	-rm -f ./$(DEPDIR)/BuildingRecord.Po
	-rm -f ./$(DEPDIR)/CTPDatabase.Po
	-rm -f ./$(DEPDIR)/CTPRecord.Po
	-rm -f ./$(DEPDIR)/CitySizeRecord.Po
	-rm -f ./$(DEPDIR)/CityStyleRecord.Po
	-rm -f ./$(DEPDIR)/CivilisationRecord.Po
	-rm -f ./$(DEPDIR)/ConceptRecord.Po
	-rm -f ./$(DEPDIR)/ConstRecord.Po
	-rm -f ./$(DEPDIR)/CultureRecord.Po
	-rm -f ./$(DEPDIR)/DBLexer.Po
	-rm -f ./$(DEPDIR)/DifficultyRecord.Po
	-rm -f ./$(DEPDIR)/DiplomacyProposalRecord.Po
	-rm -f ./$(DEPDIR)/DiplomacyRecord.Po
	-rm -f ./$(DEPDIR)/DiplomacyThreatRecord.Po
	-rm -f ./$(DEPDIR)/EndGameObjectRecord.Po
	-rm -f ./$(DEPDIR)/FeatRecord.Po
	-rm -f ./$(DEPDIR)/GlobalWarmingRecord.Po
	-rm -f ./$(DEPDIR)/GoalRecord.Po
	-rm -f ./$(DEPDIR)/GovernmentRecord.Po
	-rm -f ./$(DEPDIR)/IconRecord.Po
	-rm -f ./$(DEPDIR)/ImprovementListRecord.Po
	-rm -f ./$(DEPDIR)/LeaderRecord.Po
	-rm -f ./$(DEPDIR)/MapIconRecord.Po
	-rm -f ./$(DEPDIR)/MapRecord.Po
	-rm -f ./$(DEPDIR)/OrderRecord.Po
	-rm -f ./$(DEPDIR)/PersonalityRecord.Po
	-rm -f ./$(DEPDIR)/PollutionRecord.Po
	-rm -f ./$(DEPDIR)/PopRecord.Po
	-rm -f ./$(DEPDIR)/ReligionRecord.Po
	-rm -f ./$(DEPDIR)/ResourceRecord.Po
	-rm -f ./$(DEPDIR)/RiskRecord.Po
	-rm -f ./$(DEPDIR)/SoundRecord.Po
	-rm -f ./$(DEPDIR)/SpecialAttackInfoRecord.Po
	-rm -f ./$(DEPDIR)/SpecialEffectRecord.Po
	-rm -f ./$(DEPDIR)/SpriteRecord.Po
	-rm -f ./$(DEPDIR)/StrategyRecord.Po
	-rm -f ./$(DEPDIR)/TerrainImprovementRecord.Po
	-rm -f ./$(DEPDIR)/TerrainRecord.Po
	-rm -f ./$(DEPDIR)/UnitBuildListRecord.Po
	-rm -f ./$(DEPDIR)/UnitRecord.Po
	-rm -f ./$(DEPDIR)/UnitpromotionRecord.Po
	-rm -f ./$(DEPDIR)/WonderBuildListRecord.Po
	-rm -f ./$(DEPDIR)/WonderMovieRecord.Po
	-rm -f ./$(DEPDIR)/WonderRecord.Po
	-rm -f ./$(DEPDIR)/lex.dbl.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/AdvanceBranchRecord.Po
	-rm -f ./$(DEPDIR)/AdvanceListRecord.Po
	-rm -f ./$(DEPDIR)/AdvanceRecord.Po
	-rm -f ./$(DEPDIR)/AgeCityStyleRecord.Po
	-rm -f ./$(DEPDIR)/AgeRecord.Po
	-rm -f ./$(DEPDIR)/BuildListSequenceRecord.Po
	-rm -f ./$(DEPDIR)/BuildingBuildListRecord.Po
	-rm -f ./$(DEPDIR)/BuildingRecord.Po
	-rm -f ./$(DEPDIR)/CTPDatabase.Po
	-rm -f ./$(DEPDIR)/CTPRecord.Po
	-rm -f ./$(DEPDIR)/CitySizeRecord.Po
	-rm -f ./$(DEPDIR)/CityStyleRecord.Po
	-rm -f ./$(DEPDIR)/CivilisationRecord.Po
	-rm -f ./$(DEPDIR)/ConceptRecord.Po
	-rm -f ./$(DEPDIR)/ConstRecord.Po
	-rm -f ./$(DEPDIR)/CultureRecord.Po
	-rm -f ./$(DEPDIR)/DBLexer.Po
	-rm -f ./$(DEPDIR)/DifficultyRecord.Po
	-rm -f ./$(DEPDIR)/DiplomacyProposalRecord.Po
	-rm -f ./$(DEPDIR)/DiplomacyRecord.Po
	-rm -f ./$(DEPDIR)/DiplomacyThreatRecord.Po
	-rm -f ./$(DEPDIR)/EndGameObjectRecord.Po
	-rm -f ./$(DEPDIR)/FeatRecord.Po
	-rm -f ./$(DEPDIR)/GlobalWarmingRecord.Po
	-rm -f ./$(DEPDIR)/GoalRecord.Po
	-rm -f ./$(DEPDIR)/GovernmentRecord.Po
	-rm -f ./$(DEPDIR)/IconRecord.Po
	-rm -f ./$(DEPDIR)/ImprovementListRecord.Po
	-rm -f ./$(DEPDIR)/LeaderRecord.Po
	-rm -f ./$(DEPDIR)/MapIconRecord.Po
	-rm -f ./$(DEPDIR)/MapRecord.Po
	-rm -f ./$(DEPDIR)/OrderRecord.Po
	-rm -f ./$(DEPDIR)/PersonalityRecord.Po
	-rm -f ./$(DEPDIR)/PollutionRecord.Po
	-rm -f ./$(DEPDIR)/PopRecord.Po
	-rm -f ./$(DEPDIR)/ReligionRecord.Po
	-rm -f ./$(DEPDIR)/ResourceRecord.Po
	-rm -f ./$(DEPDIR)/RiskRecord.Po
	-rm -f ./$(DEPDIR)/SoundRecord.Po
	-rm -f ./$(DEPDIR)/SpecialAttackInfoRecord.Po
	-rm -f ./$(DEPDIR)/SpecialEffectRecord.Po
	-rm -f ./$(DEPDIR)/SpriteRecord.Po
	-rm -f ./$(DEPDIR)/StrategyRecord.Po
	-rm -f ./$(DEPDIR)/TerrainImprovementRecord.Po
	-rm -f ./$(DEPDIR)/TerrainRecord.Po
	-rm -f ./$(DEPDIR)/UnitBuildListRecord.Po
	-rm -f ./$(DEPDIR)/UnitRecord.Po
	-rm -f ./$(DEPDIR)/UnitpromotionRecord.Po
	-rm -f ./$(DEPDIR)/WonderBuildListRecord.Po
	-rm -f ./$(DEPDIR)/WonderMovieRecord.Po
	-rm -f ./$(DEPDIR)/WonderRecord.Po
	-rm -f ./$(DEPDIR)/lex.dbl.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-noinstLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


include $(ctp2_code)/os/autoconf/Makefile.common

# Rules for generated sources

lex.dbl.c: $(ctp2_code)/gs/newdb/DBLexer.l
	$(LEX) -i -Pdbl -olex.dbl.c $<

$(CTPDB): ../dbgen/Makefile
	$(MAKE) -C ../dbgen

CTPDatabase.cpp: $(newdb_CDBHDRFILES)

AdvanceBranchRecord.cpp \
AdvanceBranchRecord.h: AdvanceBranchRecord.stamp

AdvanceBranchRecord.stamp: $(ctp2_code)/gs/newdb/advance.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

AdvanceListRecord.cpp \
AdvanceListRecord.h: AdvanceListRecord.stamp

AdvanceListRecord.stamp: $(ctp2_code)/gs/newdb/strategy.cdb \
		AdvanceRecord.h \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

AdvanceRecord.cpp \
AdvanceRecord.h: AdvanceRecord.stamp

AdvanceRecord.stamp: $(ctp2_code)/gs/newdb/advance.cdb \
		AgeRecord.h \
		CityStyleRecord.h GovernmentRecord.h \
		FeatRecord.h IconRecord.h ResourceRecord.h \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

AgeCityStyleRecord.cpp \
AgeCityStyleRecord.h: AgeCityStyleRecord.stamp

AgeCityStyleRecord.stamp: $(ctp2_code)/gs/newdb/citystyle.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

AgeRecord.cpp \
AgeRecord.h: AgeRecord.stamp

AgeRecord.stamp: $(ctp2_code)/gs/newdb/advance.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

BuildingBuildListRecord.cpp \
BuildingBuildListRecord.h: BuildingBuildListRecord.stamp

BuildingBuildListRecord.stamp: $(ctp2_code)/gs/newdb/strategy.cdb \
		BuildingRecord.h \
		$(CTPDB) 
	$(CTPDB) . < $<
	touch $@

BuildingRecord.cpp \
BuildingRecord.h: BuildingRecord.stamp

BuildingRecord.stamp: $(ctp2_code)/gs/newdb/building.cdb $(CTPDB) \
		CivilisationRecord.h WonderRecord.h \
		TerrainImprovementRecord.h
	$(CTPDB) . < $<
	touch $@

BuildListSequenceRecord.cpp \
BuildListSequenceRecord.h: BuildListSequenceRecord.stamp

BuildListSequenceRecord.stamp: $(ctp2_code)/gs/newdb/strategy.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

CitySizeRecord.cpp \
CitySizeRecord.h: CitySizeRecord.stamp

CitySizeRecord.stamp: $(ctp2_code)/gs/newdb/citysize.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

CityStyleRecord.cpp \
CityStyleRecord.h: CityStyleRecord.stamp

CityStyleRecord.stamp: $(ctp2_code)/gs/newdb/citystyle.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

CivilisationRecord.cpp \
CivilisationRecord.h: CivilisationRecord.stamp

CivilisationRecord.stamp: $(ctp2_code)/gs/newdb/Civilisation.cdb $(CTPDB) PersonalityRecord.stamp
	$(CTPDB) . < $<
	touch $@

ConceptRecord.cpp \
ConceptRecord.h: ConceptRecord.stamp

ConceptRecord.stamp: $(ctp2_code)/gs/newdb/Concept.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

ConstRecord.cpp \
ConstRecord.h: ConstRecord.stamp

ConstRecord.stamp: $(ctp2_code)/gs/newdb/Const.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

CultureRecord.cpp \
CultureRecord.h: CultureRecord.stamp

CultureRecord.stamp: $(ctp2_code)/gs/newdb/culture.cdb \
		BuildingRecord.h \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

DifficultyRecord.cpp \
DifficultyRecord.h: DifficultyRecord.stamp

DifficultyRecord.stamp: $(ctp2_code)/gs/newdb/Difficulty.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

DiplomacyProposalRecord.cpp \
DiplomacyProposalRecord.h: DiplomacyProposalRecord.stamp

DiplomacyProposalRecord.stamp: $(ctp2_code)/gs/newdb/DiplomacyProposal.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

DiplomacyRecord.cpp \
DiplomacyRecord.h: DiplomacyRecord.stamp

DiplomacyRecord.stamp: $(ctp2_code)/gs/newdb/diplomacy.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

DiplomacyThreatRecord.cpp \
DiplomacyThreatRecord.h: DiplomacyThreatRecord.stamp

DiplomacyThreatRecord.stamp: $(ctp2_code)/gs/newdb/DiplomacyThreat.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

EndGameObjectRecord.cpp \
EndGameObjectRecord.h: EndGameObjectRecord.stamp

EndGameObjectRecord.stamp: $(ctp2_code)/gs/newdb/EndGameObject.cdb \
		TerrainImprovementRecord.h \
		WonderRecord.h \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

FeatRecord.cpp \
FeatRecord.h: FeatRecord.stamp

FeatRecord.stamp: $(ctp2_code)/gs/newdb/feat.cdb \
		BuildingRecord.h \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

GlobalWarmingRecord.cpp \
GlobalWarmingRecord.h: GlobalWarmingRecord.stamp

GlobalWarmingRecord.stamp: $(ctp2_code)/gs/newdb/GlobalWarming.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

GoalRecord.cpp \
GoalRecord.h: GoalRecord.stamp

GoalRecord.stamp: $(ctp2_code)/gs/newdb/goal.cdb \
		OrderRecord.h \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

GovernmentRecord.cpp \
GovernmentRecord.h: GovernmentRecord.stamp

GovernmentRecord.stamp: $(ctp2_code)/gs/newdb/government.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

IconRecord.cpp \
IconRecord.h: IconRecord.stamp

IconRecord.stamp: $(ctp2_code)/gs/newdb/icon.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

ImprovementListRecord.cpp \
ImprovementListRecord.h: ImprovementListRecord.stamp

ImprovementListRecord.stamp: $(ctp2_code)/gs/newdb/strategy.cdb \
		TerrainImprovementRecord.h \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

LeaderRecord.cpp \
LeaderRecord.h: LeaderRecord.stamp

LeaderRecord.stamp: $(ctp2_code)/gs/newdb/Leader.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

MapIconRecord.cpp \
MapIconRecord.h: MapIconRecord.stamp

MapIconRecord.stamp: $(ctp2_code)/gs/newdb/Map.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

MapRecord.cpp \
MapRecord.h: MapRecord.stamp

MapRecord.stamp: $(ctp2_code)/gs/newdb/Map.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

OrderRecord.cpp \
OrderRecord.h: OrderRecord.stamp

OrderRecord.stamp: $(ctp2_code)/gs/newdb/order.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

PersonalityRecord.cpp \
PersonalityRecord.h: PersonalityRecord.stamp

PersonalityRecord.stamp: $(ctp2_code)/gs/newdb/personality.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

PollutionRecord.cpp \
PollutionRecord.h: PollutionRecord.stamp

PollutionRecord.stamp: $(ctp2_code)/gs/newdb/Pollution.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

PopRecord.cpp \
PopRecord.h: PopRecord.stamp

PopRecord.stamp: $(ctp2_code)/gs/newdb/pop.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

ReligionRecord.cpp \
ReligionRecord.h: ReligionRecord.stamp

ReligionRecord.stamp: $(ctp2_code)/gs/newdb/religion.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

ResourceRecord.cpp \
ResourceRecord.h: ResourceRecord.stamp

ResourceRecord.stamp: $(ctp2_code)/gs/newdb/terrain.cdb \
		SoundRecord.h \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

RiskRecord.cpp \
RiskRecord.h: RiskRecord.stamp

RiskRecord.stamp: $(ctp2_code)/gs/newdb/Risk.cdb \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

SoundRecord.cpp \
SoundRecord.h: SoundRecord.stamp

SoundRecord.stamp: $(ctp2_code)/gs/newdb/unit.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

SpecialAttackInfoRecord.cpp \
SpecialAttackInfoRecord.h: SpecialAttackInfoRecord.stamp

SpecialAttackInfoRecord.stamp: $(ctp2_code)/gs/newdb/unit.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

SpecialEffectRecord.cpp \
SpecialEffectRecord.h: SpecialEffectRecord.stamp

SpecialEffectRecord.stamp: $(ctp2_code)/gs/newdb/unit.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

SpriteRecord.cpp \
SpriteRecord.h: SpriteRecord.stamp

SpriteRecord.stamp: $(ctp2_code)/gs/newdb/unit.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

StrategyRecord.cpp \
StrategyRecord.h: StrategyRecord.stamp

StrategyRecord.stamp: $(ctp2_code)/gs/newdb/strategy.cdb \
		ConstRecord.h GoalRecord.h \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

TerrainImprovementRecord.cpp \
TerrainImprovementRecord.h: TerrainImprovementRecord.stamp

TerrainImprovementRecord.stamp: $(ctp2_code)/gs/newdb/TerrainImprovement.cdb \
		TerrainRecord.h \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

TerrainRecord.cpp \
TerrainRecord.h: TerrainRecord.stamp

TerrainRecord.stamp: $(ctp2_code)/gs/newdb/terrain.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

UnitBuildListRecord.cpp \
UnitBuildListRecord.h: UnitBuildListRecord.stamp

UnitBuildListRecord.stamp: $(ctp2_code)/gs/newdb/unit.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

UnitpromotionRecord.cpp \
UnitpromotionRecord.h: UnitpromotionRecord.stamp

UnitpromotionRecord.stamp: $(ctp2_code)/gs/newdb/unitpromotion.cdb \
		BuildingRecord.h \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

UnitRecord.cpp \
UnitRecord.h: UnitRecord.stamp

UnitRecord.stamp: $(ctp2_code)/gs/newdb/unit.cdb \
		TerrainImprovementRecord.h \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

WonderBuildListRecord.cpp \
WonderBuildListRecord.h: WonderBuildListRecord.stamp

WonderBuildListRecord.stamp: $(ctp2_code)/gs/newdb/wonder.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

WonderMovieRecord.cpp \
WonderMovieRecord.h: WonderMovieRecord.stamp

WonderMovieRecord.stamp: $(ctp2_code)/gs/newdb/wonder.cdb $(CTPDB)
	$(CTPDB) . < $<
	touch $@

WonderRecord.cpp \
WonderRecord.h: WonderRecord.stamp BuildingRecord.stamp FeatRecord.stamp

WonderRecord.stamp: $(ctp2_code)/gs/newdb/wonder.cdb \
		$(CTPDB)
	$(CTPDB) . < $<
	touch $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
