
/*
 * DO NOT EDIT THIS FILE!
 * It is generated automatically by ctpdb
 */

#if defined(HAVE_PRAGMA_ONCE)
#pragma once
#endif

#ifndef DIPLOMACYTHREAT_RECORD_H__
#define DIPLOMACYTHREAT_RECORD_H__

class DiplomacyThreatRecord;

#include "CTPDatabase.h"
#include "CTPRecord.h"
class CivArchive;

#define k_Num_DiplomacyThreatRecord_Tokens 20

//
// m_flags0: DiplomacyThreat
#define k_DiplomacyThreat_Disabled_Bit           0x00000001
#define k_DiplomacyThreat_HasAlly_Bit            0x00000002
#define k_DiplomacyThreat_HasBorderIncursion_Bit 0x00000004
#define k_DiplomacyThreat_IsPirating_Bit         0x00000008
#define k_DiplomacyThreat_HasEmbassy_Bit         0x00000010
#define k_DiplomacyThreat_HasHotwar_Bit          0x00000020
#define k_DiplomacyThreat_NoHotwar_Bit           0x00000040
#define k_DiplomacyThreat_HasPeaceTreaty_Bit     0x00000080
#define k_DiplomacyThreat_HasAlliance_Bit        0x00000100
#define k_DiplomacyThreat_HasNuclearWeapons_Bit  0x00000200
#define k_DiplomacyThreat_HasBioWeapons_Bit      0x00000400
#define k_DiplomacyThreat_HasNanoWeapons_Bit     0x00000800
#define k_DiplomacyThreat_HasEmbargo_Bit         0x00001000
#define k_DiplomacyThreat_HasMilitaryAgreement_Bit 0x00002000
#define k_DiplomacyThreat_HasPollutionAgreement_Bit 0x00004000
#define k_DiplomacyThreat_HasPollution_Bit       0x00008000
//
// m_Arg1 bit group
#define k_DiplomacyThreat_Arg1_ThirdParty_Bit    0x00000001
#define k_DiplomacyThreat_Arg1_HisCity_Bit       0x00000002
#define k_DiplomacyThreat_Arg1_SpecialAttack_Bit 0x00000004
#define k_DiplomacyThreat_Arg1_AgreementId_Bit   0x00000008

class DiplomacyThreatRecord : public CTPRecord
{
public:
    typedef sint32 (DiplomacyThreatRecord::*IntAccessor)() const;
    typedef bool   (DiplomacyThreatRecord::*BoolAccessor)() const;
    typedef double (DiplomacyThreatRecord::*FloatAccessor)() const ;
    typedef bool   (DiplomacyThreatRecord::*BitIntAccessor)(sint32 &val) const;
    typedef bool   (DiplomacyThreatRecord::*BitFloatAccessor)(double &val) const;
    typedef sint32 (DiplomacyThreatRecord::*IntArrayAccessor)(sint32 index) const;
    typedef double (DiplomacyThreatRecord::*FloatArrayAccessor)(sint32 index) const;

private:
    uint32 m_flags0;
    sint32            m_Title;
    char *            m_Type;
    uint32            m_Arg1;
    sint32            m_Details;
    bool m_hasGovernmentsModified; // GovMod specific flag

public:
    DiplomacyThreatRecord() { Init(); };
    DiplomacyThreatRecord(CivArchive &archive) { Serialize(archive); };
    DiplomacyThreatRecord(DiplomacyThreatRecord const & rval) { Init(); *this = rval; }
    ~DiplomacyThreatRecord();
    DiplomacyThreatRecord const & operator = (DiplomacyThreatRecord const & rval);

    void Init();
    void Serialize(CivArchive &archive);

    void CheckRequiredFields(DBLexer *lex);
    sint32 Parse(DBLexer *lex, sint32 numRecords);

    void ResolveDBReferences();
    void Merge(const DiplomacyThreatRecord & rval);
    sint32 ParseArg1Bit(DBLexer *lex);

    sint32 GetTitle() const { return m_Title; }
    char const * GetType() const { return m_Type; }
    uint32           GetArg1() const { return m_Arg1; }
    bool             GetArg1ThirdParty() const { return (m_Arg1 & k_DiplomacyThreat_Arg1_ThirdParty_Bit) != 0; }
    bool             GetArg1HisCity() const { return (m_Arg1 & k_DiplomacyThreat_Arg1_HisCity_Bit) != 0; }
    bool             GetArg1SpecialAttack() const { return (m_Arg1 & k_DiplomacyThreat_Arg1_SpecialAttack_Bit) != 0; }
    bool             GetArg1AgreementId() const { return (m_Arg1 & k_DiplomacyThreat_Arg1_AgreementId_Bit) != 0; }
    sint32 GetDetails() const { return m_Details; }
    bool GetDisabled() const { return (m_flags0 & k_DiplomacyThreat_Disabled_Bit) != 0; }
    bool GetHasAlly() const { return (m_flags0 & k_DiplomacyThreat_HasAlly_Bit) != 0; }
    bool GetHasBorderIncursion() const { return (m_flags0 & k_DiplomacyThreat_HasBorderIncursion_Bit) != 0; }
    bool GetIsPirating() const { return (m_flags0 & k_DiplomacyThreat_IsPirating_Bit) != 0; }
    bool GetHasEmbassy() const { return (m_flags0 & k_DiplomacyThreat_HasEmbassy_Bit) != 0; }
    bool GetHasHotwar() const { return (m_flags0 & k_DiplomacyThreat_HasHotwar_Bit) != 0; }
    bool GetNoHotwar() const { return (m_flags0 & k_DiplomacyThreat_NoHotwar_Bit) != 0; }
    bool GetHasPeaceTreaty() const { return (m_flags0 & k_DiplomacyThreat_HasPeaceTreaty_Bit) != 0; }
    bool GetHasAlliance() const { return (m_flags0 & k_DiplomacyThreat_HasAlliance_Bit) != 0; }
    bool GetHasNuclearWeapons() const { return (m_flags0 & k_DiplomacyThreat_HasNuclearWeapons_Bit) != 0; }
    bool GetHasBioWeapons() const { return (m_flags0 & k_DiplomacyThreat_HasBioWeapons_Bit) != 0; }
    bool GetHasNanoWeapons() const { return (m_flags0 & k_DiplomacyThreat_HasNanoWeapons_Bit) != 0; }
    bool GetHasEmbargo() const { return (m_flags0 & k_DiplomacyThreat_HasEmbargo_Bit) != 0; }
    bool GetHasMilitaryAgreement() const { return (m_flags0 & k_DiplomacyThreat_HasMilitaryAgreement_Bit) != 0; }
    bool GetHasPollutionAgreement() const { return (m_flags0 & k_DiplomacyThreat_HasPollutionAgreement_Bit) != 0; }
    bool GetHasPollution() const { return (m_flags0 & k_DiplomacyThreat_HasPollution_Bit) != 0; }
    bool GetHasGovernmentsModified() const { return m_hasGovernmentsModified; }
    sint32 GenericGetNumGovernmentsModified() const { return 0; }
    sint32 GenericGetGovernmentsModifiedIndex(sint32 index) const { return -1; }

}; /* DiplomacyThreatRecord */

struct DiplomacyThreatRecordAccessorInfo
{
    DiplomacyThreatRecord::IntAccessor        m_intAccessor;
    DiplomacyThreatRecord::BoolAccessor       m_boolAccessor;
    DiplomacyThreatRecord::FloatAccessor      m_floatAccessor;
    DiplomacyThreatRecord::BitIntAccessor     m_bitIntAccessor;
    DiplomacyThreatRecord::BitFloatAccessor   m_bitFloatAccessor;
    DiplomacyThreatRecord::IntArrayAccessor   m_intArrayAccessor;
    DiplomacyThreatRecord::FloatArrayAccessor m_floatArrayAccessor;
};

extern DiplomacyThreatRecordAccessorInfo      g_DiplomacyThreatRecord_Accessors[];
extern CTPDatabase<DiplomacyThreatRecord> *   g_theDiplomacyThreatDB;

extern const char * g_DiplomacyThreat_Tokens[];

#endif
