
/*
 * DO NOT EDIT THIS FILE!
 * It is generated automatically by ctpdb
 */

#if defined(HAVE_PRAGMA_ONCE)
#pragma once
#endif

#ifndef DIPLOMACYPROPOSAL_RECORD_H__
#define DIPLOMACYPROPOSAL_RECORD_H__

class DiplomacyProposalRecord;

#include "CTPDatabase.h"
#include "CTPRecord.h"
class CivArchive;

#define k_Num_DiplomacyProposalRecord_Tokens 48

//
// m_flags0: DiplomacyProposal
#define k_DiplomacyProposal_Details0_Bit         0x00000001
#define k_DiplomacyProposal_Details1_Bit         0x00000002
#define k_DiplomacyProposal_Details2_Bit         0x00000004
#define k_DiplomacyProposal_Details3_Bit         0x00000008
#define k_DiplomacyProposal_Details4_Bit         0x00000010
#define k_DiplomacyProposal_DetailsEx0_Bit       0x00000020
#define k_DiplomacyProposal_DetailsEx1_Bit       0x00000040
#define k_DiplomacyProposal_DetailsEx2_Bit       0x00000080
#define k_DiplomacyProposal_DetailsEx3_Bit       0x00000100
#define k_DiplomacyProposal_DetailsEx4_Bit       0x00000200
#define k_DiplomacyProposal_Reciprocal_Bit       0x00000400
#define k_DiplomacyProposal_ImageSlot_Bit        0x00000800
#define k_DiplomacyProposal_Disabled_Bit         0x00001000
#define k_DiplomacyProposal_HasAlly_Bit          0x00002000
#define k_DiplomacyProposal_HasBorderIncursion_Bit 0x00004000
#define k_DiplomacyProposal_IsPirating_Bit       0x00008000
#define k_DiplomacyProposal_HasEmbassy_Bit       0x00010000
#define k_DiplomacyProposal_HasHotwar_Bit        0x00020000
#define k_DiplomacyProposal_NoHotwar_Bit         0x00040000
#define k_DiplomacyProposal_HasPeaceTreaty_Bit   0x00080000
#define k_DiplomacyProposal_HasAlliance_Bit      0x00100000
#define k_DiplomacyProposal_HasNuclearWeapons_Bit 0x00200000
#define k_DiplomacyProposal_HasBioWeapons_Bit    0x00400000
#define k_DiplomacyProposal_HasNanoWeapons_Bit   0x00800000
#define k_DiplomacyProposal_HasEmbargo_Bit       0x01000000
#define k_DiplomacyProposal_HasMilitaryAgreement_Bit 0x02000000
#define k_DiplomacyProposal_HasPollutionAgreement_Bit 0x04000000
#define k_DiplomacyProposal_HasPollution_Bit     0x08000000
#define k_DiplomacyProposal_TrustViolationGlobal_Bit 0x10000000
//
// m_Category bit group
#define k_DiplomacyProposal_Category_Request_Bit 0x00000001
#define k_DiplomacyProposal_Category_Treaty_Bit  0x00000002
#define k_DiplomacyProposal_Category_Gift_Bit    0x00000004
//
// m_Arg1 bit group
#define k_DiplomacyProposal_Arg1_OwnCity_Bit     0x00000001
#define k_DiplomacyProposal_Arg1_HisCity_Bit     0x00000002
#define k_DiplomacyProposal_Arg1_OwnArmy_Bit     0x00000004
#define k_DiplomacyProposal_Arg1_HisArmy_Bit     0x00000008
#define k_DiplomacyProposal_Arg1_HisAgreement_Bit 0x00000010
#define k_DiplomacyProposal_Arg1_OwnAdvance_Bit  0x00000020
#define k_DiplomacyProposal_Arg1_HisAdvance_Bit  0x00000040
#define k_DiplomacyProposal_Arg1_OwnStopResearch_Bit 0x00000080
#define k_DiplomacyProposal_Arg1_HisStopResearch_Bit 0x00000100
#define k_DiplomacyProposal_Arg1_OwnUnitType_Bit 0x00000200
#define k_DiplomacyProposal_Arg1_OwnGood_Bit     0x00000400
#define k_DiplomacyProposal_Arg1_HisGood_Bit     0x00000800
#define k_DiplomacyProposal_Arg1_ThirdParty_Bit  0x00001000
#define k_DiplomacyProposal_Arg1_OwnGold_Bit     0x00002000
#define k_DiplomacyProposal_Arg1_HisGold_Bit     0x00004000
#define k_DiplomacyProposal_Arg1_OwnPollution_Bit 0x00008000
#define k_DiplomacyProposal_Arg1_HisPollution_Bit 0x00010000
#define k_DiplomacyProposal_Arg1_Percent_Bit     0x00020000
//
// m_Class bit group
#define k_DiplomacyProposal_Class_Request_Bit    0x00000001
#define k_DiplomacyProposal_Class_Treaty_Bit     0x00000002
#define k_DiplomacyProposal_Class_Offer_Bit      0x00000004
//
// m_Excludes bit group
#define k_DiplomacyProposal_Excludes_Request_Bit 0x00000001
#define k_DiplomacyProposal_Excludes_Treaty_Bit  0x00000002
#define k_DiplomacyProposal_Excludes_Offer_Bit   0x00000004
//
// m_flags0: StrengthStrings
#define k_StrengthStrings_DetailsWeak_Bit        0x00000001
#define k_StrengthStrings_DetailsEven_Bit        0x00000002
#define k_StrengthStrings_DetailsStrong_Bit      0x00000004

class DiplomacyProposalRecord : public CTPRecord
{
public:
    typedef sint32 (DiplomacyProposalRecord::*IntAccessor)() const;
    typedef bool   (DiplomacyProposalRecord::*BoolAccessor)() const;
    typedef double (DiplomacyProposalRecord::*FloatAccessor)() const ;
    typedef bool   (DiplomacyProposalRecord::*BitIntAccessor)(sint32 &val) const;
    typedef bool   (DiplomacyProposalRecord::*BitFloatAccessor)(double &val) const;
    typedef sint32 (DiplomacyProposalRecord::*IntArrayAccessor)(sint32 index) const;
    typedef double (DiplomacyProposalRecord::*FloatArrayAccessor)(sint32 index) const;

    class StrengthStrings {
    private:
        uint32            m_flags0;
        sint32            m_DetailsWeakValue;
        sint32            m_DetailsEvenValue;
        sint32            m_DetailsStrongValue;

    public:
        StrengthStrings();
        StrengthStrings(CivArchive & archive){ Serialize(archive); };
        ~StrengthStrings();
        StrengthStrings const & operator = (StrengthStrings const & rval);
        bool operator == (StrengthStrings const & rval) {
          return false;
        }

        void Serialize(CivArchive &archive);
        sint32 Parse(DBLexer *lex);
        static sint32 ParseInArray(DBLexer *lex, StrengthStrings **array, sint32 *numElements);
        static sint32 ParseInArray(DBLexer *lex, StrengthStrings *array, sint32 *numElements, sint32 maxSize);
        void ResolveDBReferences();

        bool HasDetailsWeak() const { return (m_flags0 & k_StrengthStrings_DetailsWeak_Bit) != 0; }
        bool GetDetailsWeak(sint32 & value) const
        {
            if (m_flags0 & k_StrengthStrings_DetailsWeak_Bit)
            {
                value = m_DetailsWeakValue;
            }
            return (m_flags0 & k_StrengthStrings_DetailsWeak_Bit) != 0;
        }
        bool HasDetailsEven() const { return (m_flags0 & k_StrengthStrings_DetailsEven_Bit) != 0; }
        bool GetDetailsEven(sint32 & value) const
        {
            if (m_flags0 & k_StrengthStrings_DetailsEven_Bit)
            {
                value = m_DetailsEvenValue;
            }
            return (m_flags0 & k_StrengthStrings_DetailsEven_Bit) != 0;
        }
        bool HasDetailsStrong() const { return (m_flags0 & k_StrengthStrings_DetailsStrong_Bit) != 0; }
        bool GetDetailsStrong(sint32 & value) const
        {
            if (m_flags0 & k_StrengthStrings_DetailsStrong_Bit)
            {
                value = m_DetailsStrongValue;
            }
            return (m_flags0 & k_StrengthStrings_DetailsStrong_Bit) != 0;
        }

    }; /* class StrengthStrings */

private:
    uint32 m_flags0;
    sint32            m_Title;
    uint32            m_Category;
    char *            m_Type;
    uint32            m_Arg1;
    StrengthStrings   m_Details0Value;
    StrengthStrings   m_Details1Value;
    StrengthStrings   m_Details2Value;
    StrengthStrings   m_Details3Value;
    StrengthStrings   m_Details4Value;
    StrengthStrings   m_DetailsEx0Value;
    StrengthStrings   m_DetailsEx1Value;
    StrengthStrings   m_DetailsEx2Value;
    StrengthStrings   m_DetailsEx3Value;
    StrengthStrings   m_DetailsEx4Value;
    uint32            m_Class;
    uint32            m_Excludes;
    sint32            m_ReciprocalValue; // Index into DiplomacyProposal database
    char *            m_Image;
    sint32            m_ImageSlotValue;
    bool m_hasGovernmentsModified; // GovMod specific flag

public:
    DiplomacyProposalRecord() { Init(); };
    DiplomacyProposalRecord(CivArchive &archive) { Serialize(archive); };
    DiplomacyProposalRecord(DiplomacyProposalRecord const & rval) { Init(); *this = rval; }
    ~DiplomacyProposalRecord();
    DiplomacyProposalRecord const & operator = (DiplomacyProposalRecord const & rval);

    void Init();
    void Serialize(CivArchive &archive);

    void CheckRequiredFields(DBLexer *lex);
    sint32 Parse(DBLexer *lex, sint32 numRecords);

    void ResolveDBReferences();
    void Merge(const DiplomacyProposalRecord & rval);
    sint32 ParseCategoryBit(DBLexer *lex);
    sint32 ParseArg1Bit(DBLexer *lex);
    sint32 ParseClassBit(DBLexer *lex);
    sint32 ParseExcludesBit(DBLexer *lex);

    sint32 GetTitle() const { return m_Title; }
    uint32           GetCategory() const { return m_Category; }
    bool             GetCategoryRequest() const { return (m_Category & k_DiplomacyProposal_Category_Request_Bit) != 0; }
    bool             GetCategoryTreaty() const { return (m_Category & k_DiplomacyProposal_Category_Treaty_Bit) != 0; }
    bool             GetCategoryGift() const { return (m_Category & k_DiplomacyProposal_Category_Gift_Bit) != 0; }
    char const * GetType() const { return m_Type; }
    uint32           GetArg1() const { return m_Arg1; }
    bool             GetArg1OwnCity() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_OwnCity_Bit) != 0; }
    bool             GetArg1HisCity() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_HisCity_Bit) != 0; }
    bool             GetArg1OwnArmy() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_OwnArmy_Bit) != 0; }
    bool             GetArg1HisArmy() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_HisArmy_Bit) != 0; }
    bool             GetArg1HisAgreement() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_HisAgreement_Bit) != 0; }
    bool             GetArg1OwnAdvance() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_OwnAdvance_Bit) != 0; }
    bool             GetArg1HisAdvance() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_HisAdvance_Bit) != 0; }
    bool             GetArg1OwnStopResearch() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_OwnStopResearch_Bit) != 0; }
    bool             GetArg1HisStopResearch() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_HisStopResearch_Bit) != 0; }
    bool             GetArg1OwnUnitType() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_OwnUnitType_Bit) != 0; }
    bool             GetArg1OwnGood() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_OwnGood_Bit) != 0; }
    bool             GetArg1HisGood() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_HisGood_Bit) != 0; }
    bool             GetArg1ThirdParty() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_ThirdParty_Bit) != 0; }
    bool             GetArg1OwnGold() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_OwnGold_Bit) != 0; }
    bool             GetArg1HisGold() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_HisGold_Bit) != 0; }
    bool             GetArg1OwnPollution() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_OwnPollution_Bit) != 0; }
    bool             GetArg1HisPollution() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_HisPollution_Bit) != 0; }
    bool             GetArg1Percent() const { return (m_Arg1 & k_DiplomacyProposal_Arg1_Percent_Bit) != 0; }
    bool HasDetails0() const { return (m_flags0 & k_DiplomacyProposal_Details0_Bit) != 0; }
    bool GetDetails0(const StrengthStrings *&ptr) const
    {
        ptr = (m_flags0 & k_DiplomacyProposal_Details0_Bit) ? &m_Details0Value : NULL;
        return (m_flags0 & k_DiplomacyProposal_Details0_Bit) != 0;
    }
    const StrengthStrings * GetDetails0Ptr() const
    {
        return (m_flags0 & k_DiplomacyProposal_Details0_Bit) ? &m_Details0Value : NULL;
    }
    bool HasDetails1() const { return (m_flags0 & k_DiplomacyProposal_Details1_Bit) != 0; }
    bool GetDetails1(const StrengthStrings *&ptr) const
    {
        ptr = (m_flags0 & k_DiplomacyProposal_Details1_Bit) ? &m_Details1Value : NULL;
        return (m_flags0 & k_DiplomacyProposal_Details1_Bit) != 0;
    }
    const StrengthStrings * GetDetails1Ptr() const
    {
        return (m_flags0 & k_DiplomacyProposal_Details1_Bit) ? &m_Details1Value : NULL;
    }
    bool HasDetails2() const { return (m_flags0 & k_DiplomacyProposal_Details2_Bit) != 0; }
    bool GetDetails2(const StrengthStrings *&ptr) const
    {
        ptr = (m_flags0 & k_DiplomacyProposal_Details2_Bit) ? &m_Details2Value : NULL;
        return (m_flags0 & k_DiplomacyProposal_Details2_Bit) != 0;
    }
    const StrengthStrings * GetDetails2Ptr() const
    {
        return (m_flags0 & k_DiplomacyProposal_Details2_Bit) ? &m_Details2Value : NULL;
    }
    bool HasDetails3() const { return (m_flags0 & k_DiplomacyProposal_Details3_Bit) != 0; }
    bool GetDetails3(const StrengthStrings *&ptr) const
    {
        ptr = (m_flags0 & k_DiplomacyProposal_Details3_Bit) ? &m_Details3Value : NULL;
        return (m_flags0 & k_DiplomacyProposal_Details3_Bit) != 0;
    }
    const StrengthStrings * GetDetails3Ptr() const
    {
        return (m_flags0 & k_DiplomacyProposal_Details3_Bit) ? &m_Details3Value : NULL;
    }
    bool HasDetails4() const { return (m_flags0 & k_DiplomacyProposal_Details4_Bit) != 0; }
    bool GetDetails4(const StrengthStrings *&ptr) const
    {
        ptr = (m_flags0 & k_DiplomacyProposal_Details4_Bit) ? &m_Details4Value : NULL;
        return (m_flags0 & k_DiplomacyProposal_Details4_Bit) != 0;
    }
    const StrengthStrings * GetDetails4Ptr() const
    {
        return (m_flags0 & k_DiplomacyProposal_Details4_Bit) ? &m_Details4Value : NULL;
    }
    bool HasDetailsEx0() const { return (m_flags0 & k_DiplomacyProposal_DetailsEx0_Bit) != 0; }
    bool GetDetailsEx0(const StrengthStrings *&ptr) const
    {
        ptr = (m_flags0 & k_DiplomacyProposal_DetailsEx0_Bit) ? &m_DetailsEx0Value : NULL;
        return (m_flags0 & k_DiplomacyProposal_DetailsEx0_Bit) != 0;
    }
    const StrengthStrings * GetDetailsEx0Ptr() const
    {
        return (m_flags0 & k_DiplomacyProposal_DetailsEx0_Bit) ? &m_DetailsEx0Value : NULL;
    }
    bool HasDetailsEx1() const { return (m_flags0 & k_DiplomacyProposal_DetailsEx1_Bit) != 0; }
    bool GetDetailsEx1(const StrengthStrings *&ptr) const
    {
        ptr = (m_flags0 & k_DiplomacyProposal_DetailsEx1_Bit) ? &m_DetailsEx1Value : NULL;
        return (m_flags0 & k_DiplomacyProposal_DetailsEx1_Bit) != 0;
    }
    const StrengthStrings * GetDetailsEx1Ptr() const
    {
        return (m_flags0 & k_DiplomacyProposal_DetailsEx1_Bit) ? &m_DetailsEx1Value : NULL;
    }
    bool HasDetailsEx2() const { return (m_flags0 & k_DiplomacyProposal_DetailsEx2_Bit) != 0; }
    bool GetDetailsEx2(const StrengthStrings *&ptr) const
    {
        ptr = (m_flags0 & k_DiplomacyProposal_DetailsEx2_Bit) ? &m_DetailsEx2Value : NULL;
        return (m_flags0 & k_DiplomacyProposal_DetailsEx2_Bit) != 0;
    }
    const StrengthStrings * GetDetailsEx2Ptr() const
    {
        return (m_flags0 & k_DiplomacyProposal_DetailsEx2_Bit) ? &m_DetailsEx2Value : NULL;
    }
    bool HasDetailsEx3() const { return (m_flags0 & k_DiplomacyProposal_DetailsEx3_Bit) != 0; }
    bool GetDetailsEx3(const StrengthStrings *&ptr) const
    {
        ptr = (m_flags0 & k_DiplomacyProposal_DetailsEx3_Bit) ? &m_DetailsEx3Value : NULL;
        return (m_flags0 & k_DiplomacyProposal_DetailsEx3_Bit) != 0;
    }
    const StrengthStrings * GetDetailsEx3Ptr() const
    {
        return (m_flags0 & k_DiplomacyProposal_DetailsEx3_Bit) ? &m_DetailsEx3Value : NULL;
    }
    bool HasDetailsEx4() const { return (m_flags0 & k_DiplomacyProposal_DetailsEx4_Bit) != 0; }
    bool GetDetailsEx4(const StrengthStrings *&ptr) const
    {
        ptr = (m_flags0 & k_DiplomacyProposal_DetailsEx4_Bit) ? &m_DetailsEx4Value : NULL;
        return (m_flags0 & k_DiplomacyProposal_DetailsEx4_Bit) != 0;
    }
    const StrengthStrings * GetDetailsEx4Ptr() const
    {
        return (m_flags0 & k_DiplomacyProposal_DetailsEx4_Bit) ? &m_DetailsEx4Value : NULL;
    }
    uint32           GetClass() const { return m_Class; }
    bool             GetClassRequest() const { return (m_Class & k_DiplomacyProposal_Class_Request_Bit) != 0; }
    bool             GetClassTreaty() const { return (m_Class & k_DiplomacyProposal_Class_Treaty_Bit) != 0; }
    bool             GetClassOffer() const { return (m_Class & k_DiplomacyProposal_Class_Offer_Bit) != 0; }
    uint32           GetExcludes() const { return m_Excludes; }
    bool             GetExcludesRequest() const { return (m_Excludes & k_DiplomacyProposal_Excludes_Request_Bit) != 0; }
    bool             GetExcludesTreaty() const { return (m_Excludes & k_DiplomacyProposal_Excludes_Treaty_Bit) != 0; }
    bool             GetExcludesOffer() const { return (m_Excludes & k_DiplomacyProposal_Excludes_Offer_Bit) != 0; }
    bool HasReciprocal() const { return (m_flags0 & k_DiplomacyProposal_Reciprocal_Bit) != 0; }
    bool GetReciprocalIndex(sint32 & index) const
    {
        index = (m_flags0 & k_DiplomacyProposal_Reciprocal_Bit) ? m_ReciprocalValue : -1;
        return (m_flags0 & k_DiplomacyProposal_Reciprocal_Bit) != 0;
    }
    bool GetReciprocal(const DiplomacyProposalRecord * & rec) const;
    const DiplomacyProposalRecord * GetReciprocalPtr() const;
    char const * GetImage() const { return m_Image; }
    bool HasImageSlot() const { return (m_flags0 & k_DiplomacyProposal_ImageSlot_Bit) != 0; }
    bool GetImageSlot(sint32 & value) const
    {
        if (m_flags0 & k_DiplomacyProposal_ImageSlot_Bit)
        {
            value = m_ImageSlotValue;
        }
        return (m_flags0 & k_DiplomacyProposal_ImageSlot_Bit) != 0;
    }
    bool GetDisabled() const { return (m_flags0 & k_DiplomacyProposal_Disabled_Bit) != 0; }
    bool GetHasAlly() const { return (m_flags0 & k_DiplomacyProposal_HasAlly_Bit) != 0; }
    bool GetHasBorderIncursion() const { return (m_flags0 & k_DiplomacyProposal_HasBorderIncursion_Bit) != 0; }
    bool GetIsPirating() const { return (m_flags0 & k_DiplomacyProposal_IsPirating_Bit) != 0; }
    bool GetHasEmbassy() const { return (m_flags0 & k_DiplomacyProposal_HasEmbassy_Bit) != 0; }
    bool GetHasHotwar() const { return (m_flags0 & k_DiplomacyProposal_HasHotwar_Bit) != 0; }
    bool GetNoHotwar() const { return (m_flags0 & k_DiplomacyProposal_NoHotwar_Bit) != 0; }
    bool GetHasPeaceTreaty() const { return (m_flags0 & k_DiplomacyProposal_HasPeaceTreaty_Bit) != 0; }
    bool GetHasAlliance() const { return (m_flags0 & k_DiplomacyProposal_HasAlliance_Bit) != 0; }
    bool GetHasNuclearWeapons() const { return (m_flags0 & k_DiplomacyProposal_HasNuclearWeapons_Bit) != 0; }
    bool GetHasBioWeapons() const { return (m_flags0 & k_DiplomacyProposal_HasBioWeapons_Bit) != 0; }
    bool GetHasNanoWeapons() const { return (m_flags0 & k_DiplomacyProposal_HasNanoWeapons_Bit) != 0; }
    bool GetHasEmbargo() const { return (m_flags0 & k_DiplomacyProposal_HasEmbargo_Bit) != 0; }
    bool GetHasMilitaryAgreement() const { return (m_flags0 & k_DiplomacyProposal_HasMilitaryAgreement_Bit) != 0; }
    bool GetHasPollutionAgreement() const { return (m_flags0 & k_DiplomacyProposal_HasPollutionAgreement_Bit) != 0; }
    bool GetHasPollution() const { return (m_flags0 & k_DiplomacyProposal_HasPollution_Bit) != 0; }
    bool GetTrustViolationGlobal() const { return (m_flags0 & k_DiplomacyProposal_TrustViolationGlobal_Bit) != 0; }
    bool GetHasGovernmentsModified() const { return m_hasGovernmentsModified; }
    sint32 GenericGetNumGovernmentsModified() const { return 0; }
    sint32 GenericGetGovernmentsModifiedIndex(sint32 index) const { return -1; }

}; /* DiplomacyProposalRecord */

struct DiplomacyProposalRecordAccessorInfo
{
    DiplomacyProposalRecord::IntAccessor        m_intAccessor;
    DiplomacyProposalRecord::BoolAccessor       m_boolAccessor;
    DiplomacyProposalRecord::FloatAccessor      m_floatAccessor;
    DiplomacyProposalRecord::BitIntAccessor     m_bitIntAccessor;
    DiplomacyProposalRecord::BitFloatAccessor   m_bitFloatAccessor;
    DiplomacyProposalRecord::IntArrayAccessor   m_intArrayAccessor;
    DiplomacyProposalRecord::FloatArrayAccessor m_floatArrayAccessor;
};

extern DiplomacyProposalRecordAccessorInfo      g_DiplomacyProposalRecord_Accessors[];
extern CTPDatabase<DiplomacyProposalRecord> *   g_theDiplomacyProposalDB;

extern const char * g_DiplomacyProposal_Tokens[];

#endif
