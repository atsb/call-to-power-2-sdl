
/*
 * DO NOT EDIT THIS FILE!
 * It is generated automatically by ctpdb
 */

#if defined(HAVE_PRAGMA_ONCE)
#pragma once
#endif

#ifndef IMPROVEMENTLIST_RECORD_H__
#define IMPROVEMENTLIST_RECORD_H__

class ImprovementListRecord;

#include "CTPDatabase.h"
#include "CTPRecord.h"
class CivArchive;
class TerrainImprovementRecord;

#define k_Num_ImprovementListRecord_Tokens 1


class ImprovementListRecord : public CTPRecord
{
public:
    typedef sint32 (ImprovementListRecord::*IntAccessor)() const;
    typedef bool   (ImprovementListRecord::*BoolAccessor)() const;
    typedef double (ImprovementListRecord::*FloatAccessor)() const ;
    typedef bool   (ImprovementListRecord::*BitIntAccessor)(sint32 &val) const;
    typedef bool   (ImprovementListRecord::*BitFloatAccessor)(double &val) const;
    typedef sint32 (ImprovementListRecord::*IntArrayAccessor)(sint32 index) const;
    typedef double (ImprovementListRecord::*FloatArrayAccessor)(sint32 index) const;

private:
    sint32          * m_Improvement; // Index into TerrainImprovement database
    sint32            m_numImprovement;
    bool m_hasGovernmentsModified; // GovMod specific flag

public:
    ImprovementListRecord() { Init(); };
    ImprovementListRecord(CivArchive &archive) { Serialize(archive); };
    ImprovementListRecord(ImprovementListRecord const & rval) { Init(); *this = rval; }
    ~ImprovementListRecord();
    ImprovementListRecord const & operator = (ImprovementListRecord const & rval);

    void Init();
    void Serialize(CivArchive &archive);

    void CheckRequiredFields(DBLexer *lex);
    sint32 Parse(DBLexer *lex, sint32 numRecords);

    void ResolveDBReferences();
    void Merge(const ImprovementListRecord & rval);

    sint32 GetImprovementIndex(sint32 index) const;
    const TerrainImprovementRecord * GetImprovement(sint32 index) const;
    sint32 GetNumImprovement() const { return m_numImprovement;}
    bool GetHasGovernmentsModified() const { return m_hasGovernmentsModified; }
    sint32 GenericGetNumGovernmentsModified() const { return 0; }
    sint32 GenericGetGovernmentsModifiedIndex(sint32 index) const { return -1; }

}; /* ImprovementListRecord */

struct ImprovementListRecordAccessorInfo
{
    ImprovementListRecord::IntAccessor        m_intAccessor;
    ImprovementListRecord::BoolAccessor       m_boolAccessor;
    ImprovementListRecord::FloatAccessor      m_floatAccessor;
    ImprovementListRecord::BitIntAccessor     m_bitIntAccessor;
    ImprovementListRecord::BitFloatAccessor   m_bitFloatAccessor;
    ImprovementListRecord::IntArrayAccessor   m_intArrayAccessor;
    ImprovementListRecord::FloatArrayAccessor m_floatArrayAccessor;
};

extern ImprovementListRecordAccessorInfo      g_ImprovementListRecord_Accessors[];
extern CTPDatabase<ImprovementListRecord> *   g_theImprovementListDB;

extern const char * g_ImprovementList_Tokens[];

#endif
